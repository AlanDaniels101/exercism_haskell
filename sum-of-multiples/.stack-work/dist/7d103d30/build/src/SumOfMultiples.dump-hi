
==================== FINAL INTERFACE ====================
2019-04-24 01:01:57.7655857 UTC

interface sum-of-multiples-1.5.0.10-LMCgRGpNUYy3CU9F0MjcmC:SumOfMultiples 8043
  interface hash: 7d337f3c36274c1d517d37fe286afdec
  ABI hash: e520c98c8795fb18f550570baa6760a3
  export-list hash: 1c99015f9763d914d942bc9b6ce28959
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0527c515cada2cc2079fef10aa370e66
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  SumOfMultiples.sumOfMultiples
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Data.Foldable 6cf3e918f22d03c0870804f05cd183d1
import  -/  base-4.11.1.0:Data.List cb78ca5eace70fd310936fda86b3e611
import  -/  base-4.11.1.0:Data.OldList 3987872d5de68d40c22cd1c30825ad08
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.Num 5de8df0185e7e8d8ec29b3c61e2c8606
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  ghc-prim-0.5.2.0:GHC.Classes f7d67fd97d5a20e9252c9597d1aa387b
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type 6713f4457912bac968474ebbf062cd01
122766082817c38c4f62a777b696cd85
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SumOfMultiples.$trModule3
                   SumOfMultiples.$trModule1) -}
cf3b037b3680f14336918ac6aa9e9313
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SumOfMultiples.$trModule2) -}
937cec3c03d5a4b676481dceeded508e
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SumOfMultiples"#) -}
f382ae5056aa1be7bd434ca5d8781c7c
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SumOfMultiples.$trModule4) -}
c234591f1138e0a5837ab15e3fae3711
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("sum-of-multiples-1.5.0.10-LMCgRGpNUYy3CU9F0MjcmC"#) -}
b2384618e746009b1802ada8f70c3133
  sumOfMultiples ::
    [GHC.Integer.Type.Integer]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: (\ (factors :: [GHC.Integer.Type.Integer])
                   (limit :: GHC.Integer.Type.Integer) ->
                 letrec {
                   go :: [GHC.Integer.Type.Integer] -> [GHC.Integer.Type.Integer]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Integer.Type.Integer]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Integer.Type.Integer
                       : y ys
                       -> case GHC.Integer.Type.eqInteger#
                                 y
                                 SumOfMultiples.sumOfMultiples1 of wild1 {
                            DEFAULT
                            -> letrec {
                                 go1 :: GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
                                   {- Arity: 1, Strictness: <S,U> -}
                                 = \ (b2 :: GHC.Integer.Type.Integer) ->
                                   case GHC.Integer.Type.geInteger# b2 limit of wild2 {
                                     DEFAULT
                                     -> GHC.Types.:
                                          @ GHC.Integer.Type.Integer
                                          b2
                                          (go1 (GHC.Integer.Type.plusInteger b2 y))
                                     1# -> GHC.Types.[] @ GHC.Integer.Type.Integer }
                               } in
                               GHC.Base.++ @ GHC.Integer.Type.Integer (go1 y) (go ys)
                            1#
                            -> GHC.Base.++_$s++
                                 @ GHC.Integer.Type.Integer
                                 (go ys)
                                 SumOfMultiples.sumOfMultiples1
                                 (GHC.Types.[] @ GHC.Integer.Type.Integer) } }
                 } in
                 SumOfMultiples.sumOfMultiples_go
                   (Data.OldList.nubBy
                      @ GHC.Integer.Type.Integer
                      GHC.Integer.Type.eqInteger
                      (go factors))
                   SumOfMultiples.sumOfMultiples1) -}
62fe4aafff369f8a7c03301d96c9b3c0
  sumOfMultiples1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
3062e400559a7d9a7efd4f2f25642c1f
  sumOfMultiples_go ::
    [GHC.Integer.Type.Integer]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

