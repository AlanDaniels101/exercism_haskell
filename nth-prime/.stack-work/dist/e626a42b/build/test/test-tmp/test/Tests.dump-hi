
==================== FINAL INTERFACE ====================
2019-09-30 18:29:30.4633237 UTC

interface main:Main 8065
  interface hash: 118b5a63aade3bfe3fb0ad3fca5ba796
  ABI hash: 22687551b93c853ecea3930c5f1dfda3
  export-list hash: 55eaaaaa4b932cc71d79891a9acfdd7c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c8289a43b6d1c92b924dcefc48c24042
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.13.2 Win32-2.6.1.0
                      ansi-terminal-0.9.1 array-0.5.3.0 base-4.12.0.0 bytestring-0.10.8.2
                      call-stack-0.1.0 clock-0.8 colour-2.3.5 containers-0.6.0.1
                      deepseq-1.4.4.0 directory-1.3.3.0 filepath-1.4.2.1
                      ghc-boot-th-8.6.5 ghc-prim-0.5.3 hspec-2.7.1 hspec-core-2.7.1
                      hspec-expectations-0.8.2 integer-gmp-1.0.2.0 mintty-0.1.2
                      nth-prime-2.1.0.6 pretty-1.1.3.6 quickcheck-io-0.2.0 random-1.1
                      setenv-0.1.1.3 splitmix-0.0.3 stm-2.5.0.0 template-haskell-2.14.0.0
                      time-1.8.0.2 transformers-0.5.6.2
orphans: colour-2.3.5:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.5.0.0:Control.Monad.STM base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         clock-0.8:System.Clock containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal
                         ghc-boot-th-8.6.5:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.5:GHC.LanguageExtensions.Type
                         hspec-core-2.7.1:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.12.0.0:Data.Foldable bdeac546b12282c8986759606b9295a5
import  -/  base-4.12.0.0:GHC.Base fbe365a916ebeeeb4bc1f895dbe83e42
import  -/  base-4.12.0.0:GHC.Real 3b42f3125c1d17d4e4b4437a3c97310f
import  -/  base-4.12.0.0:Prelude 80c668cb99fbafebd524c5e897f8c982
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  hspec-2.7.1:Test.Hspec 4bcb1268b8c7003c58b127c326648a58
import  -/  hspec-2.7.1:Test.Hspec.Runner 2ce275dd45497dd54a693ffb59124aaf
import  -/  hspec-core-2.7.1:Test.Hspec.Core.Config.Options f75ffccfc2c0c10e4b115e299d91df81
import  -/  hspec-core-2.7.1:Test.Hspec.Core.Runner 94e77f4d5f6eed6c29aa0299e8824af7
import  -/  hspec-core-2.7.1:Test.Hspec.Core.Spec 1ff3b0fb6487d444e198d7aac95d39f4
import  -/  hspec-core-2.7.1:Test.Hspec.Core.Spec.Monad 48412903933df3b11976f14a2067bc1c
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 1437efa279e8b1011c27bc4722cacd4e
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type 991701cf58f9f55c8a39f2041a88edd4
import  -/  nth-prime-2.1.0.6:Prime b463efe2fbdf9dafdb756507f914e420
0aa705a2fcf0449cdc7bad08805c7a68
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8197111133229858407##
                   13847006553897280588##
                   Main.$trModule
                   Main.$tc'Case2
                   0#
                   Main.$tc'Case1) -}
6fc21dd8b35ae7df9abfcd56a3c1f8ad
  $tc'Case1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0c0299238ee13fbc2e14231d59357ec9
  $tc'Case2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Case3) -}
b70b9a2f50a01b383c0fc203a93b45f6
  $tc'Case3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Case"#) -}
12604f78431514e8a018598b58b31d79
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   990021888930651814##
                   4262142848388084561##
                   Main.$trModule
                   Main.$tcCase1
                   0#
                   GHC.Types.krep$*) -}
b0dff1fba9a2e1fbd8ccfcfdc7bfd5cc
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcCase2) -}
7179be3aa9b5f07778c569f16b1ed2bf
  $tcCase2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Case"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
05cf8f27cbccd9af3c6dd1541ed90bbb
  $ww1 ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Maybe.Maybe GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.SpecTree
              (Test.Hspec.Core.Example.Arg
                 Test.Hspec.Expectations.Expectation)]) #)
  {- Arity: 4, Strictness: <L,1*U><L,U><L,U><S,U>, Inline: [2],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Integer.Type.Integer)
                   (ww2 :: GHC.Maybe.Maybe GHC.Integer.Type.Integer)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# w,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.SpecTree
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                       (Test.Hspec.Core.Tree.Leaf
                          @ (Test.Hspec.Core.Example.ActionWith
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          @ (Test.Hspec.Core.Tree.Item
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (Test.Hspec.Core.Tree.Item
                             @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                             (case ww of wild {
                                []
                                -> case Main.main47 of wild1 {
                                     GHC.Maybe.Nothing -> Test.Hspec.Core.Tree.specItem1
                                     GHC.Maybe.Just v -> v }
                                : ds1 ds2 -> wild })
                             Main.main32
                             (GHC.Maybe.Nothing @ GHC.Types.Bool)
                             GHC.Types.False
                             (Test.Hspec.Core.Example.safeEvaluateExample1
                                @ Test.Hspec.Expectations.Expectation
                                Test.Hspec.Core.Example.$fExampleIO1
                                  `cast`
                                ((<Test.Hspec.Expectations.Expectation>_R
                                  ->_R <Test.Hspec.Core.Example.Params>_R
                                  ->_R <(Test.Hspec.Core.Example.Arg
                                           Test.Hspec.Expectations.Expectation
                                         -> GHC.Types.IO ())
                                        -> GHC.Types.IO ()>_R
                                  ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                  ->_R Sym (GHC.Types.N:IO[0]
                                                <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                                <Test.Hspec.Expectations.Expectation>_N))
                                (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                 case GHC.Integer.Type.integerToInt ww1 of wild { DEFAULT ->
                                 let {
                                   $j :: GHC.Maybe.Maybe GHC.Integer.Type.Integer
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                     <join 1> {- Arity: 1, Strictness: <S,U> -}
                                   = \ (w4 :: GHC.Maybe.Maybe GHC.Integer.Type.Integer)[OneShot] ->
                                     let {
                                       $j1 :: (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                         <join 0> {- Strictness: x -}
                                       = let {
                                           $j2 :: GHC.Base.String
                                                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                             <join 1> {- Arity: 1, Strictness: <B,U>x -}
                                           = \ (expectedMsg :: GHC.Base.String)[OneShot] ->
                                             case Test.HUnit.Lang.assertEqual_go
                                                    expectedMsg of wild2 { () ->
                                             case w4 of wild1 {
                                               GHC.Maybe.Nothing
                                               -> case Main.main31 of wild3 { () ->
                                                  Main.main30 expectedMsg eta2 }
                                               GHC.Maybe.Just b1
                                               -> Main.main29 b1 eta2 expectedMsg } }
                                         } in
                                         case ww2 of wild1 {
                                           GHC.Maybe.Nothing -> $j2 GHC.Show.$fShowMaybe4
                                           GHC.Maybe.Just b1
                                           -> $j2
                                                (GHC.Base.++
                                                   @ GHC.Types.Char
                                                   GHC.Show.$fShowMaybe1
                                                   (case GHC.Show.$w$cshowsPrec4
                                                           11#
                                                           b1
                                                           (GHC.Types.[]
                                                              @ GHC.Types.Char) of ww3 { (#,#) ww4 ww5 ->
                                                    GHC.Types.: @ GHC.Types.Char ww4 ww5 })) }
                                     } in
                                     case w4 of wild1 {
                                       GHC.Maybe.Nothing
                                       -> case ww2 of wild2 {
                                            GHC.Maybe.Nothing -> (# eta2, GHC.Tuple.() #)
                                            GHC.Maybe.Just ipv -> $j1 }
                                       GHC.Maybe.Just a1
                                       -> case ww2 of wild2 {
                                            GHC.Maybe.Nothing -> $j1
                                            GHC.Maybe.Just b1
                                            -> case GHC.Integer.Type.eqInteger# a1 b1 of wild3 {
                                                 DEFAULT -> $j1 1# -> (# eta2, GHC.Tuple.() #) } } }
                                 } in
                                 case GHC.Prim.<=# wild 0# of lwild {
                                   DEFAULT
                                   -> case wild of wild1 {
                                        DEFAULT
                                        -> $j
                                             (GHC.Maybe.Just
                                                @ GHC.Integer.Type.Integer
                                                (case GHC.List.$w!!
                                                        @ GHC.Types.Int
                                                        Prime.nth3
                                                        (GHC.Prim.-#
                                                           wild1
                                                           1#) of wild2 { GHC.Types.I# i ->
                                                 GHC.Integer.Type.smallInteger i }))
                                        1# -> $j Prime.nth1 }
                                   1# -> $j (GHC.Maybe.Nothing @ GHC.Integer.Type.Integer) } })
                                  `cast`
                                (Sym (GHC.Types.N:IO[0] <()>_R)))
                               `cast`
                             (<Test.Hspec.Core.Example.Params>_R
                              ->_R <Test.Hspec.Core.Example.ActionWith
                                      (Test.Hspec.Core.Example.Arg
                                         Test.Hspec.Expectations.Expectation)
                                    -> GHC.Types.IO ()>_R
                              ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                              ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg
                                  Test.Hspec.Expectations.Expectation)))) #)) -}
16e010454ffe4cfde1ba926537ecc3dd
  data Case
    = Case {description :: GHC.Base.String,
            input :: GHC.Integer.Type.Integer,
            expected :: GHC.Maybe.Maybe GHC.Integer.Type.Integer}
16e010454ffe4cfde1ba926537ecc3dd
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds1 }) -}
16e010454ffe4cfde1ba926537ecc3dd
  expected :: Main.Case -> GHC.Maybe.Maybe GHC.Integer.Type.Integer
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds3 }) -}
16e010454ffe4cfde1ba926537ecc3dd
  input :: Main.Case -> GHC.Integer.Type.Integer
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 -> ds2 }) -}
e6d9b108ebc3267ebc3c1d49dc281c1b
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
c53887a1eede45debb1d8cae7ee1f92b
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Core.Runner.hspecWith1
                   Main.main51
                   Main.main2
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                       <GHC.Types.IO>_R
                                                       <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N) <()>_N))) -}
0deace6b8a9e9fc2959eb11748ea798c
  main10 :: GHC.Maybe.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Maybe.Just
                   @ GHC.Integer.Type.Integer
                   Main.main11) -}
5b7d24220bba5975ee9a4759f715dbde
  main11 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (104743) -}
fc969c11c67ade8ce3a2daf39cb0027a
  main12 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (10001) -}
90ab6ee2bde5bb664694495feebc27f9
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main14) -}
d40ad9bc98987d1ad03ed0458cfebe09
  main14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("big prime"#) -}
6f2d80a665a4042eba34c1feaf323dd4
  main15 :: GHC.Maybe.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Maybe.Just
                   @ GHC.Integer.Type.Integer
                   Main.main16) -}
2b46c28fd6f4efaa7204d7f9bdfbc840
  main16 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (13) -}
a4b5110d47955dc527c6526c45eb6f55
  main17 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (6) -}
5a436c92361a39b7feded6cf982f9005
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main19) -}
115472a31db1d1904a1aa77a9f5f73ab
  main19 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("sixth prime"#) -}
5cedde7237b7a7f40d4654375eabf921
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Main.$ww1 Main.main27 Main.main26 Main.main25 eta)
                        `cast`
                      (Nth:3
                           (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                            ->_R ((#,#)
                                    <'GHC.Types.TupleRep '[]>_R
                                    <'GHC.Types.LiftedRep>_R
                                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                    ((,)
                                       <()>_R
                                       ([(Test.Hspec.Core.Tree.Tree
                                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                             ->_R <GHC.Types.IO ()>_R)
                                            (Test.Hspec.Core.Tree.Item
                                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R)) of ds { (#,#) ipv ipv1 ->
                 case (Main.$ww1 Main.main23 Main.main22 Main.main20 ipv)
                        `cast`
                      (Nth:3
                           (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                            ->_R ((#,#)
                                    <'GHC.Types.TupleRep '[]>_R
                                    <'GHC.Types.LiftedRep>_R
                                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                    ((,)
                                       <()>_R
                                       ([(Test.Hspec.Core.Tree.Tree
                                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                             ->_R <GHC.Types.IO ()>_R)
                                            (Test.Hspec.Core.Tree.Item
                                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R)) of ds1 { (#,#) ipv2 ipv3 ->
                 case (Main.$ww1 Main.main18 Main.main17 Main.main15 ipv2)
                        `cast`
                      (Nth:3
                           (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                            ->_R ((#,#)
                                    <'GHC.Types.TupleRep '[]>_R
                                    <'GHC.Types.LiftedRep>_R
                                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                    ((,)
                                       <()>_R
                                       ([(Test.Hspec.Core.Tree.Tree
                                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                             ->_R <GHC.Types.IO ()>_R)
                                            (Test.Hspec.Core.Tree.Item
                                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R)) of ds2 { (#,#) ipv4 ipv5 ->
                 case (Main.$ww1 Main.main13 Main.main12 Main.main10 ipv4)
                        `cast`
                      (Nth:3
                           (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                            ->_R ((#,#)
                                    <'GHC.Types.TupleRep '[]>_R
                                    <'GHC.Types.LiftedRep>_R
                                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                    ((,)
                                       <()>_R
                                       ([(Test.Hspec.Core.Tree.Tree
                                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                             ->_R <GHC.Types.IO ()>_R)
                                            (Test.Hspec.Core.Tree.Item
                                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R)) of ds3 { (#,#) ipv6 ipv7 ->
                 case (Main.$ww1
                         Main.main8
                         Main.main7
                         (GHC.Maybe.Nothing @ GHC.Integer.Type.Integer)
                         ipv6)
                        `cast`
                      (Nth:3
                           (<GHC.Prim.State# GHC.Prim.RealWorld>_R
                            ->_R ((#,#)
                                    <'GHC.Types.TupleRep '[]>_R
                                    <'GHC.Types.LiftedRep>_R
                                    <GHC.Prim.State# GHC.Prim.RealWorld>_R
                                    ((,)
                                       <()>_R
                                       ([(Test.Hspec.Core.Tree.Tree
                                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                                             ->_R <GHC.Types.IO ()>_R)
                                            (Test.Hspec.Core.Tree.Item
                                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R)_R)_R)) of ds4 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    (GHC.Tuple.(),
                     GHC.Types.:
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (Test.Hspec.Core.Tree.Node
                          @ (Test.Hspec.Core.Example.ActionWith ())
                          @ (Test.Hspec.Core.Tree.Item ())
                          Main.main3
                          (case ipv1 of wild { (,) a2 w1 ->
                           GHC.Base.++
                             @ (Test.Hspec.Core.Tree.Tree
                                  (Test.Hspec.Core.Example.ActionWith ())
                                  (Test.Hspec.Core.Tree.Item ()))
                             w1
                             (case ipv3 of wild1 { (,) a1 w2 ->
                              GHC.Base.++
                                @ (Test.Hspec.Core.Tree.Tree
                                     (Test.Hspec.Core.Example.ActionWith ())
                                     (Test.Hspec.Core.Tree.Item ()))
                                w2
                                (case ipv5 of wild2 { (,) a3 w3 ->
                                 GHC.Base.++
                                   @ (Test.Hspec.Core.Tree.Tree
                                        (Test.Hspec.Core.Example.ActionWith ())
                                        (Test.Hspec.Core.Tree.Item ()))
                                   w3
                                   (case ipv7 of wild3 { (,) a4 w4 ->
                                    GHC.Base.++
                                      @ (Test.Hspec.Core.Tree.Tree
                                           (Test.Hspec.Core.Example.ActionWith ())
                                           (Test.Hspec.Core.Tree.Item ()))
                                      w4
                                      (case ipv9 of wild4 { (,) a5 w5 -> w5 }) }) }) }) }))
                       (GHC.Types.[]
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ())))) #) } } } } }) -}
eb52bf982653eddeb6ad57afaa1f9826
  main20 :: GHC.Maybe.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Maybe.Just
                   @ GHC.Integer.Type.Integer
                   Main.main21) -}
01af22dbc59126450bd07a2c3f17461e
  main21 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
fd08922444a02bb0ffb6b5c7124deeeb
  main22 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
3beab4c48532df6bb024d05d4f10af57
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main24) -}
73938e89409a2ef24389fd8003c33532
  main24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("second prime"#) -}
82bf39a32b65a164008b9d5d890ed0fa
  main25 :: GHC.Maybe.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Maybe.Just
                   @ GHC.Integer.Type.Integer
                   Main.main22) -}
3dd3841a87536a4c4402d5e278934caa
  main26 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
6807e776bdc5c0b9c971d5088c1d0a42
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main28) -}
0a02488ffda84809029f359c6605e3e7
  main28 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("first prime"#) -}
006b420776bf930f29a4e355b8fd1583
  main29 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> GHC.Base.String
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <B,U><B,U><B,U>x -}
c99a984375bbdca7c5c23c6f234fa4db
  main3 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Char Main.main6 Main.main4) -}
754c130cb30fb7baf3ee914f153cc10b
  main30 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <B,U><B,U>x -}
1c4beca7aac8b83e10ea370a6697b5b0
  main31 :: ()
  {- Unfolding: (Test.HUnit.Lang.assertEqual_go
                   GHC.Show.$fShowMaybe4) -}
74764a2b5f22a58eb4417dab005b22e6
  main32 :: GHC.Maybe.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main33) -}
c90f895f60c509f89552cdbf419d80e5
  main33 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main34) -}
56bd73a032c805d3df11d5e8f2f393b0
  main34 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main35) -}
d3638faa29aa2519db9cf1de3f38cb78
  main35 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.fit12
                   Test.Hspec.Core.Spec.fit8
                   Main.main36) -}
1ea7ffcf648683b94c3e398022c67e63
  main36 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main45
                   Main.main37
                   GHC.Stack.Types.EmptyCallStack) -}
ee49c846cf00e68a9ee0e8489170d2b8
  main37 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main44
                   Main.main43
                   Main.main41
                   Main.main40
                   Main.main39
                   Main.main40
                   Main.main38) -}
1798405a9d2db69a1f6ae7e09a9c7e90
  main38 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
71f1e979e9be9093cf629ae569a4aea6
  main39 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
63991e2231fe44bbc4e3713d10e32256
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main5) -}
c1f12f99d41ae7e1f8b2b0198f1cc937
  main40 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
a6fdc4def59629ef6ab504cc4dcf5fd1
  main41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main42) -}
ae7dc28e8333dbf9723c1bef2e9c1830
  main42 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test\\Tests.hs"#) -}
b535d07bd0d1f54d9f84df11f0a01270
  main43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
257b246d9f92e896943c1564e1e67e4f
  main44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
7b00718debc15d0ebfc2a867564a7dd5
  main45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main46) -}
948980edccf48a88452f27c2379f0771
  main46 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
62736cc25233f92246b1d5500c9b9b7c
  main47 :: GHC.Maybe.Maybe GHC.Base.String
  {- Unfolding: (Test.Hspec.Core.Tree.specGroup19 Main.main48) -}
5e5235e505a7499fdf10ad65d8a2a0d9
  main48 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.specGroup15
                   Main.main49) -}
0b72485819e57304186966120331cd8e
  main49 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specGroup13
                   Test.Hspec.Core.Tree.specItem9
                   Main.main50) -}
21be73aa7a50a16c1a4e01992c4e8c04
  main5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("th"#) -}
a6134f03dd31bf363fd7f97b1e4978f9
  main50 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem7
                   Test.Hspec.Core.Tree.specItem3
                   Main.main35) -}
cea115f1c5c552d7842869572a91a73f
  main51 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Maybe.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Maybe.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Maybe.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Maybe.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Maybe.Nothing @ GHC.Types.Int)
                   (GHC.Maybe.Nothing @ GHC.Types.Int)
                   (GHC.Maybe.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Maybe.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Maybe.Nothing @ GHC.Types.Int)) -}
8511acd32f33585790d28709830aa4a1
  main52 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
fb0d9fdb2ccb09e542867d20ef06cd12
  main6 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'n'#) -}
751af440395d73ce25f704afc4f5ceb9
  main7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
ef689fccbf09a3ecdd8d3a3ff90b75e2
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main9) -}
2923b4e7652a8b5c51fc93ec9f936ced
  main9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("there is no zeroth prime"#) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

