
==================== FINAL INTERFACE ====================
2019-04-11 16:15:43.5835994 UTC

interface main:Main 8043
  interface hash: 798c0dd0a119541413a9c74f177dd3df
  ABI hash: f64b2e24e6bb8b5d8b1cc148a11cfa2e
  export-list hash: 7e8a7764307d4d70963bea2643a04180
  orphan hash: 219e135e5e49e1b13d15d36f1d54fc52
  flag hash: 9c9e38a34ad37c5706ded0aa0152cf86
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.11.3 Win32-2.6.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 base-4.11.1.0
                      bytestring-0.10.8.2 call-stack-0.1.0 clock-0.7.2 colour-2.3.4
                      containers-0.5.11.0 deepseq-1.4.3.0 directory-1.3.1.5
                      filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hspec-2.5.5
                      hspec-core-2.5.5 hspec-expectations-0.8.2 integer-gmp-1.0.2.0
                      mintty-0.1.2 nucleotide-count-1.3.0.7 pretty-1.1.3.6
                      primitive-0.6.3.0 quickcheck-io-0.2.0 random-1.1 setenv-0.1.1.3
                      stm-2.4.5.0 template-haskell-2.13.0.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.5.0
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.5.0:Control.Monad.STM base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.11.1.0:Data.Either 917cb7ca74324934e13727e32d71d117
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  containers-0.5.11.0:Data.Map 1fa9f25d51fe9f60b440e141f6d7bf14
import  -/  containers-0.5.11.0:Data.Map.Internal a2314ee57e16ff1fe3af08500b455e81
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  hspec-2.5.5:Test.Hspec 54df06f5d545fec5f91cea5cb55c0ae8
import  -/  hspec-2.5.5:Test.Hspec.Runner 9fe7f63f5e6ed51f346724e5e71cfbc5
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Config.Options 44eafedded707b18de0b18ece30e85fc
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Runner aacfbe7ef9810029c809d32d98b97f0a
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec c73480f52a618942c509ac8e85ded21d
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec.Monad e5e9ce617af58e105519cbbabb1c58c0
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 40271346c6df10d72d14c4ff3ae952ea
import  -/  nucleotide-count-1.3.0.7:DNA 6f5dbe7b90463b98f5333a8c41e2404a
2ab102ad2da228b2d2f4a21e7a79cadc
  $s$fEqEither ::
    GHC.Classes.Eq
      (Data.Either.Either
         GHC.Base.String
         (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       GHC.Base.String
                       (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                  (\ (ds :: Data.Either.Either
                              GHC.Base.String
                              (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                     (ds1 :: Data.Either.Either
                               GHC.Base.String
                               (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)) ->
                   case ds of wild {
                     Data.Either.Left a1
                     -> case ds1 of wild1 {
                          Data.Either.Left b1 -> GHC.Base.eqString a1 b1
                          Data.Either.Right ipv -> GHC.Types.False }
                     Data.Either.Right a1
                     -> case ds1 of wild1 {
                          Data.Either.Left ipv -> GHC.Types.False
                          Data.Either.Right b1
                          -> Data.Map.Internal.$fEqMap_$c==
                               @ DNA.Nucleotide
                               @ GHC.Types.Int
                               DNA.$fEqNucleotide
                               GHC.Classes.$fEqInt
                               a1
                               b1 } })
                  Main.$s$fEqEither_$s$fEqEither_$c/= -}
e35343e1f88dafa918e6d1d44380742e
  $s$fEqEither_$s$fEqEither_$c/= ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
    -> Data.Either.Either
         GHC.Base.String
         (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>, Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: Data.Either.Either
                           GHC.Base.String
                           (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   (y :: Data.Either.Either
                           GHC.Base.String
                           (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)) ->
                 case x of wild {
                   Data.Either.Left a1
                   -> case y of wild1 {
                        Data.Either.Left b1
                        -> case GHC.Base.eqString a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False }
                        Data.Either.Right ipv -> GHC.Types.True }
                   Data.Either.Right a1
                   -> case y of wild1 {
                        Data.Either.Left ipv -> GHC.Types.True
                        Data.Either.Right b1
                        -> case Data.Map.Internal.$fEqMap_$c==
                                  @ DNA.Nucleotide
                                  @ GHC.Types.Int
                                  DNA.$fEqNucleotide
                                  GHC.Classes.$fEqInt
                                  a1
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
98ff3cee7b980e24e663e2da0f3d34c2
  $s$fShowEither ::
    GHC.Show.Show
      (Data.Either.Either
         [GHC.Types.Char]
         (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Either.Either
                       [GHC.Types.Char]
                       (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                  (Data.Either.$fShowEither_$cshowsPrec
                     @ [GHC.Types.Char]
                     @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                     GHC.Show.$fShow[]_$s$fShow[]1
                     Main.$s$fShowEither_$s$fShowMap)
                  (\ (x :: Data.Either.Either
                             [GHC.Types.Char]
                             (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)) ->
                   case x of wild {
                     Data.Either.Left b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Either.$fShowEither4)
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.$fShow(,)3
                             (GHC.Show.showLitString
                                b1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.$fShow(,)3
                                   (GHC.Types.[] @ GHC.Types.Char))))
                     Data.Either.Right b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n Data.Either.$fShowEither2)
                          (Data.Map.Internal.$fShowMap_$cshowsPrec
                             @ DNA.Nucleotide
                             @ GHC.Types.Int
                             DNA.$fShowNucleotide
                             GHC.Show.$fShowInt
                             Data.Either.$fReadEither6
                             b1
                             (GHC.Types.[] @ GHC.Types.Char)) })
                  (\ (ls :: [Data.Either.Either
                               [GHC.Types.Char]
                               (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Data.Either.Either
                          [GHC.Types.Char]
                          (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                     (Data.Either.$fShowEither_$cshowsPrec
                        @ [GHC.Types.Char]
                        @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                        GHC.Show.$fShow[]_$s$fShow[]1
                        Main.$s$fShowEither_$s$fShowMap
                        Data.Either.$fShowEither1)
                     ls
                     s) -}
33bcbd44f13efde0cc65bc726c57a74e
  $s$fShowEither_$cshowList ::
    [Data.Either.Either
       [GHC.Types.Char]
       (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Either.Either
                             [GHC.Types.Char]
                             (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Either.Either
                        [GHC.Types.Char]
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   (Data.Either.$fShowEither_$cshowsPrec
                      @ [GHC.Types.Char]
                      @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                      GHC.Show.$fShow[]_$s$fShow[]1
                      Main.$s$fShowEither_$s$fShowMap
                      Data.Either.$fShowEither1)
                   ls
                   s) -}
5469cc94294f8cc6922e16bd38c469c4
  $s$fShowEither_$cshowsPrec ::
    GHC.Types.Int
    -> Data.Either.Either
         [GHC.Types.Char]
         (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: GHC.Types.Int)
                   (w3 :: Data.Either.Either
                            [GHC.Types.Char]
                            (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Data.Either.$w$cshowsPrec
                   @ [GHC.Types.Char]
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   GHC.Show.$fShow[]_$s$fShow[]1
                   Main.$s$fShowEither_$s$fShowMap
                   ww1
                   w3 }) -}
0fa3d701fcf34fa2c7560e915c26249b
  $s$fShowEither_$s$fShowMap ::
    GHC.Show.Show (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                  (Data.Map.Internal.$fShowMap_$cshowsPrec
                     @ DNA.Nucleotide
                     @ GHC.Types.Int
                     DNA.$fShowNucleotide
                     GHC.Show.$fShowInt)
                  (\ (x :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int) ->
                   Data.Map.Internal.$fShowMap_$cshowsPrec
                     @ DNA.Nucleotide
                     @ GHC.Types.Int
                     DNA.$fShowNucleotide
                     GHC.Show.$fShowInt
                     Data.Map.Internal.$fDataMap3
                     x
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (ls :: [Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int])
                     (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                     (Data.Map.Internal.$fShowMap_$cshowsPrec
                        @ DNA.Nucleotide
                        @ GHC.Types.Int
                        DNA.$fShowNucleotide
                        GHC.Show.$fShowInt
                        Data.Map.Internal.$fDataMap3)
                     ls
                     s) -}
6f7fd421d07a2331e006d0ce0b4b050e
  $s$fShowMap_$cshow ::
    Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
    -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int) ->
                 Data.Map.Internal.$fShowMap_$cshowsPrec
                   @ DNA.Nucleotide
                   @ GHC.Types.Int
                   DNA.$fShowNucleotide
                   GHC.Show.$fShowInt
                   Data.Map.Internal.$fDataMap3
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
a4ac8dc8929e04898e7d5d67d23cb423
  $s$fShowMap_$cshowList ::
    [Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   (Data.Map.Internal.$fShowMap_$cshowsPrec
                      @ DNA.Nucleotide
                      @ GHC.Types.Int
                      DNA.$fShowNucleotide
                      GHC.Show.$fShowInt
                      Data.Map.Internal.$fDataMap3)
                   ls
                   s) -}
2224be391adf89323bd6f39fb8f4517e
  $s$fShowMap_$cshowsPrec ::
    GHC.Types.Int
    -> Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><L,1*U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w2 :: GHC.Types.Int)
                   (w3 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int) ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 Data.Map.Internal.$w$cshowsPrec
                   @ DNA.Nucleotide
                   @ GHC.Types.Int
                   DNA.$fShowNucleotide
                   GHC.Show.$fShowInt
                   ww1
                   w3 }) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
7ee2534e2e03d84ce3f89fc52a582bb3
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
962aa52fc636c837fce024f1c2e3150b
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main164
                        Main.main2
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
644578bb9d6e16a0d5a2b89f5381e387
  main10 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main11) -}
16af0611fae7a76ec31ef05b5e381e3e
  main100 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main102
                   Main.main23
                   Main.main102
                   Main.main101) -}
1d09b4a32b68813794b0aa311d993b87
  main101 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 56#) -}
61c6ed72c548acc335f9036942523205
  main102 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 32#) -}
6751ab0a55e249967bfd3e1c7c2d614b
  main103 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main106
                   Main.main104) -}
f6b521c88a875d6f1051c4f3180fc0b7
  main104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main105) -}
eddd7e950fe04b95bf1eb2796396d04e
  main105 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("epetitive-sequence-has-only-guanosine"#) -}
779952929c2eff45adb98f4820a78c6f
  main106 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'r'#) -}
3d60e56b10ffa721bcd1a9c8f897133b
  main107 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main108
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
4f0051f6358baa1f1dc427449464a88f
  main108 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main109) -}
0484c9ba9a95506a2f43ef536f622303
  main109 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main129
                   Main.main121
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main110
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
99a01c77a1427c68741c9d8a4606bb73
  main11 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main31
                   Main.main16
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main12
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
f1e1b80fdeeacbf6075cd776cd365b97
  main110 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main111 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
40f117a0d88ecbb2e222264fa45f510f
  main111 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Test.HUnit.Lang.assertEqual1
                   @ (Data.Either.Either
                        GHC.Base.String
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main114
                   Main.main112
                   eta2) -}
a28a923b95c21b1310703c7e2a485ac4
  main112 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts_go
                   (GHC.CString.unpackCString# Main.main113)
                   DNA.nucleotideCounts1) -}
ee9eaae6e026b36e6d268b289d6b9600
  main113 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("G"#) -}
676663303877d1f1138d150f92653f18
  main114 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   Main.main115) -}
357df52f6442c582e283cf975054677e
  main115 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
  {- Unfolding: (DNA.$sfromList @ GHC.Types.Int Main.main116) -}
2626ee759540afd07c20bfaecf14f694
  main116 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main94
                   Main.main117) -}
810896c305a4272127fa4ec2fbbd7e15
  main117 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main93
                   Main.main118) -}
2945e86cc7231c6785e1164357d7fe79
  main118 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main119
                   Main.main88) -}
a0ce3fe33224537f5563a21543a5bfa6
  main119 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.G, Main.main120)) -}
727d14fc05ceb6cf7a13903490128b54
  main12 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main13 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
7910a2f59c82f606328ce609162f2517
  main120 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
9941d99fa64338ba727aada87a2c7091
  main121 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main122) -}
21317eb07af698fa328c3a587b0d7582
  main122 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main123) -}
38919c5ac3be3750a1a7d46edc71cb1b
  main123 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main124) -}
f99527f4083754695469c4ac91aca6b9
  main124 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main125) -}
a3a06d4a640df0012b6b10a1f3a7d2bb
  main125 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main126
                   GHC.Stack.Types.EmptyCallStack) -}
85623e0bd65b91b5708b67afad2e2a3e
  main126 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main128
                   Main.main23
                   Main.main128
                   Main.main127) -}
2228722562b524157defaf523ebd1d4a
  main127 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 68#) -}
08fa9327100a3cb2c3515321cef10bf7
  main128 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 26#) -}
45435ec63bc0d63a366408883cb8b050
  main129 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main75
                   Main.main130) -}
cad29b6ec04047e6473e8bbb3778bbc6
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Main.main_eta of wild {
                   Data.Either.Left ds1 -> (# eta2, GHC.Tuple.() #)
                   Data.Either.Right ds1 -> Main.main14 eta2 }) -}
fa5c43bbaaaa76cc637c65eecf142c01
  main130 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main131) -}
bfb48256b2112c1216b42df025175703
  main131 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("an count one nucleotide in single-character input"#) -}
87b7d0f694f24289c297a6ea6a34d67b
  main132 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main133
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
93107837dcc20a8ef03e64a1bcb53504
  main133 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main134) -}
a325846da165201efe01774f0d3e8f8a
  main134 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main151
                   Main.main144
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main135
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
8b325f6b6804db9563a9858ccd2cf46a
  main135 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main136 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
1a882772f63e465dad7f795cc16561db
  main136 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Test.HUnit.Lang.assertEqual1
                   @ (Data.Either.Either
                        GHC.Base.String
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main138
                   Main.main137
                   eta2) -}
f7a9a51f6d69844652e963bd4d84d8f9
  main137 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts_go
                   (GHC.Types.[] @ GHC.Types.Char)
                   DNA.nucleotideCounts1) -}
47509409bfe7d35dc6846778a8da77e9
  main138 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   Main.main139) -}
f3ccf6cb0b3c3078afd7abb6d10e5167
  main139 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
  {- Unfolding: (DNA.$sfromList @ GHC.Types.Int Main.main140) -}
5b2c8b8e23d5c231e864839806744ae4
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <B,U>x -}
0f16843e1cbadac7cd4ed332ca777c7e
  main140 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main94
                   Main.main141) -}
c18e392097256a3db021d16fb60b5033
  main141 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main93
                   Main.main142) -}
f1e0f10c3402b7f1381173a3cd31fc31
  main142 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main143
                   Main.main88) -}
3f6004d1b3a8c5a5548f3032cd326567
  main143 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.G, Main.main90)) -}
a42b81586822225b9b39ead235287406
  main144 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main145) -}
e9e2ba08de96fc5867d3a04a45d172c2
  main145 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main146) -}
f78af1bba7a02fc13b215c1431e74252
  main146 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main147) -}
765419d9657d32a9865a4a8c529f3764
  main147 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main148) -}
eeff5370b809aa4f4763040ebcb5b651
  main148 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main149
                   GHC.Stack.Types.EmptyCallStack) -}
3760c27277e39ee0ae0c93aa294f62e4
  main149 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main55
                   Main.main23
                   Main.main55
                   Main.main150) -}
9deba3cd0a842818e09c2b0fa93992ea
  main15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AGXXACT"#) -}
48bdceae952f675ddc8068ac4d6385d2
  main150 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 53#) -}
2b22c2b10edeb5442fb57416bf86b4d2
  main151 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main154
                   Main.main152) -}
ee5a8868dd83be6966db0b0354f6f088
  main152 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main153) -}
e8f5ad0db985be59ebf1d94b0a52bed8
  main153 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("mpty dna strand has no nucleotides"#) -}
fe778ae13af2e568d43f00d131f90815
  main154 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'e'#) -}
f86a1d8da1743a57d1a740665de0c278
  main155 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main156) -}
0dc59bc711ffb82e00857cc659700763
  main156 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("nucleotideCounts"#) -}
df096798da2a5e2a38a76824f5b074b7
  main157 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main158
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
68181d95193ccf1533b015696f481153
  main158 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main162
                   Main.main159
                   GHC.Stack.Types.EmptyCallStack) -}
809de9179b27a26714b0b235e8b746eb
  main159 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main161
                   Main.main160
                   Main.main161
                   Main.main71) -}
48a24b4055b410368317009fc3bb3c90
  main16 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main17) -}
541f456876dc060a4f9a07f2f0cee05e
  main160 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
2ea8cd677463f0a1882859b07c2abe12
  main161 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 18#) -}
7247174357b8704c7bc6e139fc8a9fc3
  main162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main163) -}
1395fe6ae3e3a72e1045deb14497d810
  main163 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("describe"#) -}
fbf88a889e4a1c734151d83fe06a9027
  main164 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
5d84b8d128cbc4e8fc87352292c4e20c
  main165 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
702371e5124000dfa92cf978bcb18c23
  main17 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main18) -}
47a94e5a93a3381e8856abc036170f9b
  main18 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main19) -}
61ad11094cc422efcc90bf5df356ac89
  main19 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main20) -}
b35fae3325f084bfe01da03074aaec4f
  main2 :: Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Main.main157
                   Main.main155
                   Main.main3
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                       <GHC.Types.IO>_R
                                                       <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N) <()>_N))) -}
fdfa1df0361f19cc284fdae3651dbeb2
  main20 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main21
                   GHC.Stack.Types.EmptyCallStack) -}
aa9b59f8c1df9b665db392a6a4f30ec2
  main21 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main24
                   Main.main23
                   Main.main24
                   Main.main22) -}
a9e87f0c70d73ad900421159c107fb02
  main22 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 34#) -}
b3f0672d0b9ac84378fa3e01e5f613c3
  main23 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 13#) -}
9e864459b3f3454dd5623daa84b2ab23
  main24 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
f062652f737d9916904949673c3b2620
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main26) -}
7c0ca043c37d5bd854a164483d94b73b
  main26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test\\Tests.hs"#) -}
2a59e8401e04dfb6807922cd98609c4b
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
3b7e3f6eac17d39321d7411ecb0a9fdb
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
0e799937545012c18b016ba7d4c995be
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main30) -}
2fc8e27ffc1f02fa7c08ff5dcd6616cd
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s, Main.main4 #)) -}
a703cb0c2985822e9ffc8834e0df9402
  main30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
c667f1fcff0b1ece86c9ad3570a57a5e
  main31 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main34
                   Main.main32) -}
7274e7c4b0b079c36189cf9c0f3ed6ec
  main32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main33) -}
813d3a7dd6dd8a987d39dab786b00a00
  main33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("alidates strand"#) -}
2c4ae7eb836807c9598bc04443f7c450
  main34 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'v'#) -}
a53969f0061b180ad3ef6311e3e8d9e7
  main35 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main36
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
f311502ad1bbad51622c194ce0f699a9
  main36 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main37) -}
1d5d1de192fa98f6768a680230cc5e62
  main37 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main72
                   Main.main64
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main38
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
688f8be67d873785a133cfa4f6b33564
  main38 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main39 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
3494144bc9a7bb1c63af4ad67588fa58
  main39 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Test.HUnit.Lang.assertEqual1
                   @ (Data.Either.Either
                        GHC.Base.String
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main42
                   Main.main40
                   eta2) -}
c8833a8a298405df9a6c591eba41b602
  main4 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), Main.main5)) -}
c9580707c3b7cd0664e9a23276c9bb06
  main40 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts_go
                   (GHC.CString.unpackCString# Main.main41)
                   DNA.nucleotideCounts1) -}
b0ea4ff72764364cc17efc8f502a34af
  main41 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC"#) -}
c044ed56c570431e09e163f6d588a014
  main42 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   Main.main43) -}
e9e5449bde40382fb3c2a5a0f31cd134
  main43 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
  {- Unfolding: (DNA.$sfromList @ GHC.Types.Int Main.main44) -}
4b56983ca9171843a44d83261923d713
  main44 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main54
                   Main.main45) -}
719c6d01f322f3998391bc5e77db4961
  main45 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main52
                   Main.main46) -}
13fa97dd258b04ccce3ebdd745aaf848
  main46 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main50
                   Main.main47) -}
8fd6cfb1b213935c0b46891c239f9b66
  main47 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main48
                   (GHC.Types.[] @ (DNA.Nucleotide, GHC.Types.Int))) -}
5f7986d19e14a54cd725b79e804b6f74
  main48 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.T, Main.main49)) -}
d41795727412854a4017195c9d719045
  main49 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
fc9e602296b779727fde509a70f87106
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main132
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main6) -}
676cc5255bebb3dba92c939a1bbfabfe
  main50 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.G, Main.main51)) -}
2f8f3a0d31c482b540f8153595f7e400
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
f455d2be24ea8f241c745164bba1331c
  main52 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.C, Main.main53)) -}
5b82f0accfe83adea813f3d5f172cb9d
  main53 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 12#) -}
d2df9e0f9998d899d839138295c75130
  main54 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.A, Main.main55)) -}
55aeb29b25f4d0d4417b92e28f407f8d
  main55 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 20#) -}
d069ad6fe3b0a928e03482476382f2ef
  main56 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?6
                   Test.HUnit.Base.@?=2
                   Main.main57) -}
cc9b6213152afe91f4b80a5c6fe12e78
  main57 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe6
                   Test.Hspec.Expectations.shouldBe2
                   Main.main58) -}
000178a2886fb3a57232cccf374bca7a
  main58 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main62
                   Main.main59
                   GHC.Stack.Types.EmptyCallStack) -}
db80743b5d49371e0e7863458df3a7f9
  main59 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main61
                   Main.main22
                   Main.main61
                   Main.main60) -}
ede351c561d1dc74b019d26defb17712
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main107
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main7) -}
30957c5d408cbe8504317242fefe23de
  main60 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 67#) -}
570a83349c4ad743920edf74c7605c2d
  main61 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16#) -}
2e86b393186d87fc0a11f85dd1405364
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main63) -}
969c394af06de35e46f3b46742f52a61
  main63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shouldBe"#) -}
6a93aba423a86311933d4b557b226bb7
  main64 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main65) -}
4f940be695e1796353f266082fb195c1
  main65 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main66) -}
2f04a3a70254bd081fbfdc7d0b66dfa7
  main66 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main67) -}
d81bc69d39c2f0e9217d2ea84567fb91
  main67 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main68) -}
d90408b32b2b7eb213f06eebf0db89f0
  main68 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main69
                   GHC.Stack.Types.EmptyCallStack) -}
14287887784b9b6fd60c807e16f3fffc
  main69 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main28
                   Main.main27
                   Main.main25
                   Main.main71
                   Main.main23
                   Main.main71
                   Main.main70) -}
a6981463147b3c8c6c4a1dc2d5812133
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main76
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main8) -}
8d22c52a1229e8de781b5e6df3041eb6
  main70 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 40#) -}
36f21e753758435941b810e14d91d446
  main71 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 38#) -}
2b88a5ee5c8dcc26a73dfa3f03419fd9
  main72 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main75
                   Main.main73) -}
4fe03c1300cd3803ae6bb17b5e012d15
  main73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main74) -}
79ca79f6e37b885fc96aa0b608151271
  main74 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ounts all nucleotides"#) -}
9a77702eab4844d5aebab49976ff7a42
  main75 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'c'#) -}
282d9cb21af43cb0805540e80e384517
  main76 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main77
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
94427a9f369f20b06253588d57635bc3
  main77 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main78) -}
4331f0f0881464778cf71e5759ef4219
  main78 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Main.main103
                   Main.main95
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main79
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
9c1f51551aff848835cd230018420e51
  main79 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   ((<Test.Hspec.Expectations.Expectation>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R <(Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation
                            -> GHC.Types.IO ())
                           -> GHC.Types.IO ()>_R
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                   Main.main80 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
efacf529ba6bbd32663b33cb1cd61d58
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Main.main35
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Main.main9
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
f0e1ae29310b7986f70003aaa274c3b9
  main80 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Test.HUnit.Lang.assertEqual1
                   @ (Data.Either.Either
                        GHC.Base.String
                        (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int))
                   Main.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$s$fEqEither
                   Main.$s$fShowEither
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main83
                   Main.main81
                   eta2) -}
747e575bb9368dfef9977d6bfead8e2e
  main81 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts_go
                   (GHC.CString.unpackCString# Main.main82)
                   DNA.nucleotideCounts1) -}
efb2bf82f151069a4218aabb423f198b
  main82 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GGGGGGGG"#) -}
62bea9b34e1e6c328c123d9c7f1c8734
  main83 ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Base.String
                   @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                   Main.main84) -}
a68508acbe9f266c92c90db03ad9e70d
  main84 :: Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int
  {- Unfolding: (DNA.$sfromList @ GHC.Types.Int Main.main85) -}
a35a4bf770ad3b53128ca7ff8aa4b520
  main85 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main94
                   Main.main86) -}
e5375defe59d483d02656c58dff9dae1
  main86 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main93
                   Main.main87) -}
5cbaa4787c1ecb2dab70b4eacde8acdf
  main87 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main91
                   Main.main88) -}
525142dd2c3a0edc002b8d6133e44bbe
  main88 :: [(DNA.Nucleotide, GHC.Types.Int)]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (DNA.Nucleotide, GHC.Types.Int)
                   Main.main89
                   (GHC.Types.[] @ (DNA.Nucleotide, GHC.Types.Int))) -}
17c60d5a1024429715271cb7feac3e8d
  main89 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.T, Main.main90)) -}
691490144cdd813cf8ac41b16015ce43
  main9 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Main.main10
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
c52cd43a74e0e34ed14fcbada82c0da9
  main90 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
6496d12a958dde0519a350139354f355
  main91 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.G, Main.main92)) -}
e2ca9a26bef615cc4c28f9d725cb99d3
  main92 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
3c582ab577380023270bbc04499ccace
  main93 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.C, Main.main90)) -}
57f5d734bbd6c370d8b7af3a616989a4
  main94 :: (DNA.Nucleotide, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((DNA.A, Main.main90)) -}
94967db10baaf83611e28b362d09b870
  main95 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main96) -}
027e5c46dae4f40cd878539f7c7933d1
  main96 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main97) -}
06ac27d438901ea4e248c1e6308bfaaa
  main97 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main98) -}
e8ca78364a8557b89258133c46d3c518
  main98 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main99) -}
7bef453d7b07e00ea0d3cb9112fa778c
  main99 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main29
                   Main.main100
                   GHC.Stack.Types.EmptyCallStack) -}
96c33bd659fd9ac341f7c817e400e379
  main_eta ::
    Data.Either.Either
      GHC.Base.String
      (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
  {- Unfolding: (DNA.nucleotideCounts_go
                   (GHC.CString.unpackCString# Main.main15)
                   DNA.nucleotideCounts1) -}
"SPEC/Main $fEqEither @ String @ (Map Nucleotide Int)" [orphan] forall (v1 :: GHC.Classes.Eq
                                                                                (Data.Map.Internal.Map
                                                                                   DNA.Nucleotide
                                                                                   GHC.Types.Int))
                                                                       (v :: GHC.Classes.Eq
                                                                               GHC.Base.String)
  Data.Either.$fEqEither @ [GHC.Types.Char]
                         @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                         v
                         v1
  = Main.$s$fEqEither
"SPEC/Main $fEqEither_$c/= @ String @ (Map Nucleotide Int)" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                                        (Data.Map.Internal.Map
                                                                                           DNA.Nucleotide
                                                                                           GHC.Types.Int))
                                                                            ($dEq :: GHC.Classes.Eq
                                                                                       GHC.Base.String)
  Data.Either.$fEqEither_$c/= @ [GHC.Types.Char]
                              @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                              $dEq
                              $dEq1
  = Main.$s$fEqEither_$s$fEqEither_$c/=
"SPEC/Main $fShowEither @ [Char] @ (Map Nucleotide Int)" [orphan] forall (v1 :: GHC.Show.Show
                                                                                  (Data.Map.Internal.Map
                                                                                     DNA.Nucleotide
                                                                                     GHC.Types.Int))
                                                                         (v :: GHC.Show.Show
                                                                                 [GHC.Types.Char])
  Data.Either.$fShowEither @ [GHC.Types.Char]
                           @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                           v
                           v1
  = Main.$s$fShowEither
"SPEC/Main $fShowEither_$cshowList @ [Char] @ (Map Nucleotide Int)" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                                  (Data.Map.Internal.Map
                                                                                                     DNA.Nucleotide
                                                                                                     GHC.Types.Int))
                                                                                    ($dShow :: GHC.Show.Show
                                                                                                 [GHC.Types.Char])
  Data.Either.$fShowEither_$cshowList @ [GHC.Types.Char]
                                      @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                                      $dShow
                                      $dShow1
  = Main.$s$fShowEither_$cshowList
"SPEC/Main $fShowEither_$cshowsPrec @ [Char] @ (Map Nucleotide Int)" [orphan] [0] forall (w1 :: GHC.Show.Show
                                                                                                  (Data.Map.Internal.Map
                                                                                                     DNA.Nucleotide
                                                                                                     GHC.Types.Int))
                                                                                         (w :: GHC.Show.Show
                                                                                                 [GHC.Types.Char])
  Data.Either.$fShowEither_$cshowsPrec @ [GHC.Types.Char]
                                       @ (Data.Map.Internal.Map DNA.Nucleotide GHC.Types.Int)
                                       w
                                       w1
  = Main.$s$fShowEither_$cshowsPrec
"SPEC/Main $fShowMap @ Nucleotide @ Int" [orphan] forall (v1 :: GHC.Show.Show
                                                                  GHC.Types.Int)
                                                         (v :: GHC.Show.Show DNA.Nucleotide)
  Data.Map.Internal.$fShowMap @ DNA.Nucleotide @ GHC.Types.Int v v1
  = Main.$s$fShowEither_$s$fShowMap
"SPEC/Main $fShowMap_$cshow @ Nucleotide @ Int" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                              GHC.Types.Int)
                                                                ($dShow :: GHC.Show.Show
                                                                             DNA.Nucleotide)
  Data.Map.Internal.$fShowMap_$cshow @ DNA.Nucleotide
                                     @ GHC.Types.Int
                                     $dShow
                                     $dShow1
  = Main.$s$fShowMap_$cshow
"SPEC/Main $fShowMap_$cshowList @ Nucleotide @ Int" [orphan] forall ($dShow1 :: GHC.Show.Show
                                                                                  GHC.Types.Int)
                                                                    ($dShow :: GHC.Show.Show
                                                                                 DNA.Nucleotide)
  Data.Map.Internal.$fShowMap_$cshowList @ DNA.Nucleotide
                                         @ GHC.Types.Int
                                         $dShow
                                         $dShow1
  = Main.$s$fShowMap_$cshowList
"SPEC/Main $fShowMap_$cshowsPrec @ Nucleotide @ Int" [orphan] [0] forall (w1 :: GHC.Show.Show
                                                                                  GHC.Types.Int)
                                                                         (w :: GHC.Show.Show
                                                                                 DNA.Nucleotide)
  Data.Map.Internal.$fShowMap_$cshowsPrec @ DNA.Nucleotide
                                          @ GHC.Types.Int
                                          w
                                          w1
  = Main.$s$fShowMap_$cshowsPrec
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

