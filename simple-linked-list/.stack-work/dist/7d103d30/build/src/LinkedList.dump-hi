
==================== FINAL INTERFACE ====================
2019-05-09 00:27:03.6403671 UTC

interface simple-linked-list-0.1.0.3-CvuzPIhnJfeDtLaXt1cVHp:LinkedList 8043
  interface hash: 8321968309181258cee5af79ddbd5d73
  ABI hash: ba477648de800680dc3ea089f3fc808c
  export-list hash: 9cd87fe91c5b6fcd4bf5118b54d8a0a4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0527c515cada2cc2079fef10aa370e66
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  LinkedList.datum
  LinkedList.fromList
  LinkedList.isNil
  LinkedList.new
  LinkedList.next
  LinkedList.nil
  LinkedList.reverseLinkedList
  LinkedList.toList
  LinkedList.LinkedList
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.List 95910b50fba2204d1a3364fe070ebf2b
import  -/  base-4.11.1.0:GHC.Show 6211aec7cccd267a5ee999e4414d7b90
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  ghc-prim-0.5.2.0:GHC.Classes f7d67fd97d5a20e9252c9597d1aa387b
dc8acd28e9af96eb38167f40f5eb5e8c
  $fEqLinkedList ::
    GHC.Classes.Eq a => GHC.Classes.Eq (LinkedList.LinkedList a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a).
                  @ (LinkedList.LinkedList a)
                  (LinkedList.$fEqLinkedList_$c== @ a v)
                  (LinkedList.$fEqLinkedList_$c/= @ a v) -}
dc8acd28e9af96eb38167f40f5eb5e8c
  $fEqLinkedList_$c/= ::
    GHC.Classes.Eq a =>
    LinkedList.LinkedList a
    -> LinkedList.LinkedList a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U>, Inline: (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (x :: LinkedList.LinkedList a)
                   (y :: LinkedList.LinkedList a) ->
                 case LinkedList.$fEqLinkedList_$c== @ a $dEq x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
dc8acd28e9af96eb38167f40f5eb5e8c
  $fEqLinkedList_$c== ::
    GHC.Classes.Eq a =>
    LinkedList.LinkedList a
    -> LinkedList.LinkedList a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U> -}
dc8acd28e9af96eb38167f40f5eb5e8c
  $fShowLinkedList ::
    GHC.Show.Show a => GHC.Show.Show (LinkedList.LinkedList a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(C(U))),A,A)>m, Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (LinkedList.LinkedList a)
                  (LinkedList.$fShowLinkedList_$cshowsPrec @ a v)
                  (LinkedList.$fShowLinkedList_$cshow @ a v)
                  (LinkedList.$fShowLinkedList_$cshowList @ a v) -}
d96782461569d3cea00cce44097b06b0
  $fShowLinkedList1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
dc8acd28e9af96eb38167f40f5eb5e8c
  $fShowLinkedList_$cshow ::
    GHC.Show.Show a => LinkedList.LinkedList a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (x :: LinkedList.LinkedList a) ->
                 LinkedList.$fShowLinkedList_$cshowsPrec
                   @ a
                   $dShow
                   LinkedList.$fShowLinkedList1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
dc8acd28e9af96eb38167f40f5eb5e8c
  $fShowLinkedList_$cshowList ::
    GHC.Show.Show a => [LinkedList.LinkedList a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [LinkedList.LinkedList a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (LinkedList.LinkedList a)
                   (LinkedList.$fShowLinkedList_$cshowsPrec
                      @ a
                      $dShow
                      LinkedList.$fShowLinkedList1)
                   ls
                   s) -}
dc8acd28e9af96eb38167f40f5eb5e8c
  $fShowLinkedList_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> LinkedList.LinkedList a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(C(U))),A,A)><L,1*U(U)><S,1*U> -}
73cabdaea074f98344f2739b0ac37d67
  $tc'Datum :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15111599104661757270##
                   9735095763564182913##
                   LinkedList.$trModule
                   LinkedList.$tc'Datum2
                   1#
                   LinkedList.$tc'Datum1) -}
9ce2d1948d65d1e64b496da86f07915c
  $tc'Datum1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
93e93ae7dc44a6a556d775a71f5e8afe
  $tc'Datum2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LinkedList.$tc'Datum3) -}
5a751224667f2235fac646c706bda509
  $tc'Datum3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Datum"#) -}
6e3f01f4348f0e0293badbd3b585e26d
  $tc'Empty :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11511449825036994846##
                   3229213057605650424##
                   LinkedList.$trModule
                   LinkedList.$tc'Empty2
                   1#
                   LinkedList.$tc'Empty1) -}
8d182a4731d632a5f72d270bfff7df82
  $tc'Empty1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
aca25c89a00e8943f053695082c3d3a4
  $tc'Empty2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LinkedList.$tc'Empty3) -}
5a944b2599c0c96f526bfdc80326c5df
  $tc'Empty3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Empty"#) -}
6598e1fed2932e20e9f4cdf91f0864f2
  $tcLinkedList :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16899011299165797613##
                   15595790571208681012##
                   LinkedList.$trModule
                   LinkedList.$trModule1
                   0#
                   GHC.Types.krep$*Arr*) -}
2aa704ffd12fa4e19a30a7034c35d8d8
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   LinkedList.$trModule3
                   LinkedList.$trModule1) -}
518e0454a70fbc038b45b85cc71e1d31
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LinkedList.$trModule2) -}
fa40546513a70a14a9f8b9e705bdd412
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LinkedList"#) -}
24d5b1b710f5d10f3d99844cddaa41cb
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS LinkedList.$trModule4) -}
8ecda89906dd9a476227b9ce7806a21c
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("simple-linked-list-0.1.0.3-CvuzPIhnJfeDtLaXt1cVHp"#) -}
dc8acd28e9af96eb38167f40f5eb5e8c
  data LinkedList a = Empty | Datum a (LinkedList.LinkedList a)
4ce5fcda94d4b91030478eb819f2b6c2
  datum :: LinkedList.LinkedList a -> a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: LinkedList.LinkedList a) ->
                 case ds of wild {
                   LinkedList.Empty -> LinkedList.datum1 @ a
                   LinkedList.Datum x tail -> x }) -}
ee911e5a9e6a5771e733eb567596c141
  datum1 :: a
  {- Strictness: x -}
eea8ef506de8cc3909e0b48864a92bfb
  fromList :: [a] -> LinkedList.LinkedList a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
7b04f77616fdf061374daa754d89cfa5
  isNil :: LinkedList.LinkedList a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: LinkedList.LinkedList a) ->
                 case ds of wild {
                   LinkedList.Empty -> GHC.Types.True
                   LinkedList.Datum ipv ipv1 -> GHC.Types.False }) -}
90def591392d38e5cbebda35fdb4624e
  new :: a -> LinkedList.LinkedList a -> LinkedList.LinkedList a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,U>m2,
     Unfolding: InlineRule (0, True, True) LinkedList.Datum -}
fd2250880ebf7d9f019767a1377387e7
  next :: LinkedList.LinkedList a -> LinkedList.LinkedList a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (ds :: LinkedList.LinkedList a) ->
                 case ds of wild {
                   LinkedList.Empty -> LinkedList.next1 @ a
                   LinkedList.Datum x tail -> tail }) -}
b038a9c71dc152cf2faa51435c9a82e1
  next1 :: LinkedList.LinkedList a
  {- Strictness: x -}
d17d0124ef5d0d30dfa09ab83874ebd0
  nil :: LinkedList.LinkedList a
  {- HasNoCafRefs,
     Unfolding: InlineRule (0, True, True) LinkedList.Empty -}
cb6c43a5dd708ac2d9dfc18ac94f4ecd
  reverseLinkedList ::
    LinkedList.LinkedList a -> LinkedList.LinkedList a
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (x :: LinkedList.LinkedList a) ->
                 LinkedList.fromList
                   @ a
                   (GHC.List.reverse1
                      @ a
                      (LinkedList.toList @ a x)
                      (GHC.Types.[] @ a))) -}
e9dc625368884ba6aa5a43f5f5fa80d0
  toList :: LinkedList.LinkedList a -> [a]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
instance [safe] GHC.Classes.Eq [LinkedList.LinkedList]
  = LinkedList.$fEqLinkedList
instance [safe] GHC.Show.Show [LinkedList.LinkedList]
  = LinkedList.$fShowLinkedList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

