
==================== FINAL INTERFACE ====================
2019-02-13 03:58:20.0168268 UTC

interface strain-0.1.0.3-DrgffGyJ0siK7P4NMtc41O:Strain 8043
  interface hash: f6d84ccd95d49d6c91202c04fb3116cb
  ABI hash: 909fc59bdeb95b1acc0b7987a030cc82
  export-list hash: 40f7a87ab610857f4c4e574fd9b0055e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0527c515cada2cc2079fef10aa370e66
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Strain.discard
  Strain.keep
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  ghc-prim-0.5.2.0:GHC.Classes f7d67fd97d5a20e9252c9597d1aa387b
9b18f706dc65da41e028a1ab32a622d9
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Strain.$trModule3
                   Strain.$trModule1) -}
ca7844099057cfa5034407bc38fa5ad4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Strain.$trModule2) -}
710888c087e5ff11c0db22564a3027f3
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Strain"#) -}
1685feaa7c2dc7743fcc532874a11b3e
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Strain.$trModule4) -}
e74ca4f801bbd5d9190859330f97289e
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("strain-0.1.0.3-DrgffGyJ0siK7P4NMtc41O"#) -}
3c8499f64a5f11c2112a42389e605fb8
  discard :: (a -> GHC.Types.Bool) -> [a] -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ @ a (p :: a -> GHC.Types.Bool) (xs :: [a]) ->
                 letrec {
                   go :: [a] -> [a] {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [a]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ a
                       : y ys
                       -> case p y of wild1 {
                            GHC.Types.False -> GHC.Types.: @ a y (go ys)
                            GHC.Types.True -> go ys } }
                 } in
                 go xs) -}
8b76d2fff8970ec3805a8e10feb66086
  keep :: (a -> GHC.Types.Bool) -> [a] -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U>,
     Unfolding: (\ @ a (p :: a -> GHC.Types.Bool) (xs :: [a]) ->
                 letrec {
                   go :: [a] -> [a] {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [a]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ a
                       : y ys
                       -> case p y of wild1 {
                            GHC.Types.False -> go ys
                            GHC.Types.True -> GHC.Types.: @ a y (go ys) } }
                 } in
                 go xs) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

