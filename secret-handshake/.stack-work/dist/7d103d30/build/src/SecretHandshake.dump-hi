
==================== FINAL INTERFACE ====================
2019-04-22 23:57:24.1201981 UTC

interface secret-handshake-1.2.0.6-ClxhbplVDXV2IrYLi24Ne6:SecretHandshake 8043
  interface hash: bd1b5d80942812c3028d61d40471a658
  ABI hash: 661da5fb7e585ddbfd7e720ce850840f
  export-list hash: 685332641bf9ca3b7fd3f69e26ff162e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0527c515cada2cc2079fef10aa370e66
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  SecretHandshake.handshake
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Data.Bits e6bc05a0d03c85e9cc84c6516097e98b
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.List 95910b50fba2204d1a3364fe070ebf2b
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  ghc-prim-0.5.2.0:GHC.Classes f7d67fd97d5a20e9252c9597d1aa387b
bfaeb9683b27e93d9a8a343513c13d75
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   SecretHandshake.$trModule3
                   SecretHandshake.$trModule1) -}
38c8ff77b1d663c1bdca2f85b14c052d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SecretHandshake.$trModule2) -}
653babac9fc3e65c6f409809fe82e305
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("SecretHandshake"#) -}
612ac36935795d2cc08f5296353e8a73
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS SecretHandshake.$trModule4) -}
1ed3af49eac35f668aa85d2c8a4154ec
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("secret-handshake-1.2.0.6-ClxhbplVDXV2IrYLi24Ne6"#) -}
6d8923f6b0ad17094c466c1f723f8d88
  $whandshake :: GHC.Prim.Int# -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.andI# ww 16# of wild {
                   DEFAULT -> SecretHandshake.$wtoEvents ww
                   0#
                   -> GHC.List.reverse1
                        @ GHC.Base.String
                        (SecretHandshake.$wtoEvents ww)
                        (GHC.Types.[] @ GHC.Base.String) }) -}
9d888158b6bb15d8868d3e6bdd462a8c
  $wtoEvents :: GHC.Prim.Int# -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
998861e3009d1fa26d20c6a8e5b0da36
  handshake :: GHC.Types.Int -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 SecretHandshake.$whandshake ww1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

