
==================== FINAL INTERFACE ====================
2019-04-30 18:46:09.0190149 UTC

interface main:Main 8043
  interface hash: d3050a9c8ded4813c22ffacf3568371f
  ABI hash: d2e77032a988788c506007ea1d5ba2da
  export-list hash: d359a5a9eec325bd1f926735b0ed088e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8aab0c017873a3054971c6e5433a63ec
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.11.3 Win32-2.6.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 base-4.11.1.0
                      bytestring-0.10.8.2 call-stack-0.1.0 clock-0.7.2 colour-2.3.4
                      containers-0.5.11.0 deepseq-1.4.3.0 directory-1.3.1.5
                      dnd-character-1.1.0.0 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hspec-2.5.5 hspec-core-2.5.5
                      hspec-expectations-0.8.2 integer-gmp-1.0.2.0 mintty-0.1.2
                      pretty-1.1.3.6 primitive-0.6.3.0 quickcheck-io-0.2.0 random-1.1
                      setenv-0.1.1.3 stm-2.4.5.0 template-haskell-2.13.0.0 tf-random-0.5
                      time-1.8.0.2 transformers-0.5.5.0
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         stm-2.4.5.0:Control.Monad.STM
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.11.3:Test.QuickCheck d7eee254374769eecc0d474ec3ec2b2a
import  -/  QuickCheck-2.11.3:Test.QuickCheck.Property 02941673cf8c58e71c4c5decba184c65
import  -/  base-4.11.1.0:Data.Foldable 6cf3e918f22d03c0870804f05cd183d1
import  -/  base-4.11.1.0:Data.Tuple bfd15ca14ee9b1b9cd782c618946afb4
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.Num 5de8df0185e7e8d8ec29b3c61e2c8606
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  base-4.11.1.0:Text.Printf 4ca768227cf516d6b7a20c1c11083907
import  -/  dnd-character-1.1.0.0:DND 949cb5fbc51784bf8818db2c1bad4ce8
import  -/  ghc-prim-0.5.2.0:GHC.Classes f7d67fd97d5a20e9252c9597d1aa387b
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  hspec-2.5.5:Test.Hspec 54df06f5d545fec5f91cea5cb55c0ae8
import  -/  hspec-2.5.5:Test.Hspec.Runner 9fe7f63f5e6ed51f346724e5e71cfbc5
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Config.Options 44eafedded707b18de0b18ece30e85fc
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Runner aacfbe7ef9810029c809d32d98b97f0a
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec c73480f52a618942c509ac8e85ded21d
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec.Monad e5e9ce617af58e105519cbbabb1c58c0
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 40271346c6df10d72d14c4ff3ae952ea
8f470deca0048d02e6fc8121ab8abb17
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8197111133229858407##
                   13847006553897280588##
                   Main.$trModule
                   Main.$tc'Case2
                   0#
                   Main.$tc'Case1) -}
6fc21dd8b35ae7df9abfcd56a3c1f8ad
  $tc'Case1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0c0299238ee13fbc2e14231d59357ec9
  $tc'Case2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Case3) -}
b70b9a2f50a01b383c0fc203a93b45f6
  $tc'Case3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Case"#) -}
9f9427b68a1c0df6b95c3a3d566064e4
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   990021888930651814##
                   4262142848388084561##
                   Main.$trModule
                   Main.$tcCase1
                   0#
                   GHC.Types.krep$*) -}
b0dff1fba9a2e1fbd8ccfcfdc7bfd5cc
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcCase2) -}
7179be3aa9b5f07778c569f16b1ed2bf
  $tcCase2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Case"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
f5215cbfbae83c78ccd6f7589cb19a77
  $wc ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 4,
     Strictness: <L,U(U)><L,U(U)><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Int)
                   (ww1 :: GHC.Types.Int)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                           <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                           <GHC.Types.IO>_R
                           <()>_N ; GHC.Types.N:IO[0]
                                        <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R)
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             (Test.Hspec.Core.Tree.Item
                                @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                                (case Text.Printf.uprintfs
                                        Main.main102
                                        (GHC.List.reverse1
                                           @ Text.Printf.UPrintf
                                           (GHC.Types.:
                                              @ (Text.Printf.ModifierParser,
                                                 Text.Printf.FieldFormatter)
                                              (Text.Printf.$wparseIntFormat @ GHC.Types.Int,
                                               Text.Printf.$fPrintfArgInt_$sformatInt ww1)
                                              (GHC.Types.:
                                                 @ (Text.Printf.ModifierParser,
                                                    Text.Printf.FieldFormatter)
                                                 (Text.Printf.$wparseIntFormat @ GHC.Types.Int,
                                                  Text.Printf.$fPrintfArgInt_$sformatInt ww)
                                                 (GHC.Types.[] @ Text.Printf.UPrintf)))
                                           (GHC.Types.[] @ Text.Printf.UPrintf))
                                        (GHC.Types.[] @ GHC.Types.Char) of wild {
                                   []
                                   -> case Main.main98 of wild1 {
                                        GHC.Base.Nothing -> Test.Hspec.Core.Tree.specItem1
                                        GHC.Base.Just v -> v }
                                   : ds2 ds3 -> wild })
                                Main.main90
                                (GHC.Base.Nothing @ GHC.Types.Bool)
                                (Test.Hspec.Core.Example.safeEvaluateExample1
                                   @ Test.Hspec.Expectations.Expectation
                                   Test.Hspec.Core.Example.$fExampleIO1
                                     `cast`
                                   ((<Test.Hspec.Expectations.Expectation>_R
                                     ->_R <Test.Hspec.Core.Example.Params>_R
                                     ->_R <(Test.Hspec.Core.Example.Arg
                                              Test.Hspec.Expectations.Expectation
                                            -> GHC.Types.IO ())
                                           -> GHC.Types.IO ()>_R
                                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                                   (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    Test.HUnit.Lang.assertEqual1
                                      @ GHC.Types.Int
                                      Main.main82
                                        `cast`
                                      (Sym (GHC.Classes.N:IP[0]
                                                <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                      GHC.Classes.$fEqInt
                                      GHC.Show.$fShowInt
                                      (GHC.Types.[] @ GHC.Types.Char)
                                      ww1
                                      (DND.modifier ww)
                                      eta2)
                                     `cast`
                                   (Sym (GHC.Types.N:IO[0] <()>_R)))
                                  `cast`
                                (<Test.Hspec.Core.Example.Params>_R
                                 ->_R <Test.Hspec.Core.Example.ActionWith
                                         (Test.Hspec.Core.Example.Arg
                                            Test.Hspec.Expectations.Expectation)
                                       -> GHC.Types.IO ()>_R
                                 ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))))
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
59336f37710f237005bbc407e6ac669d
  type Ability = DND.Character -> GHC.Types.Int
82657bae770b1981fd073464478b793f
  data Case
    = Case {input :: GHC.Types.Int, expected :: GHC.Types.Int}
82657bae770b1981fd073464478b793f
  expected :: Main.Case -> GHC.Types.Int
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 -> ds2 }) -}
82657bae770b1981fd073464478b793f
  input :: Main.Case -> GHC.Types.Int
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 -> ds1 }) -}
8343754c0c331abaf1a82c53a6afe501
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
4557bcbd9f969d6f9a7175015e0eb3cd
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main131
                        Main.main2
                          `cast`
                        (Sym (GHC.Types.N:IO[0]
                                  <((),
                                    [Test.Hspec.Core.Tree.SpecTree
                                       ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                            <GHC.Types.IO>_R
                                                            <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                               <()>_N) <()>_N))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
3ce86b407e061a3fbd968374feebfeb9
  main10 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main11) -}
4524b81b760b6903e75ce7b64cf4a862
  main100 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specGroup13
                   Test.Hspec.Core.Tree.specItem9
                   Main.main101) -}
b08a5bd408eb6bbbe6145e25288983bd
  main101 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem7
                   Test.Hspec.Core.Tree.specItem3
                   Main.main93) -}
6100b430a095997c26a638ca935af1c2
  main102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main103) -}
f5d5b73fe4e62cb19c347a444da21c56
  main103 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("computes the modifier for %2d to be %2d"#) -}
a1d07d5e40e435d6cf1d89e88b05925a
  main104 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -3#) -}
62550a47aeef5826df145b049c1e727d
  main105 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
e57a30e1e35106f90f2c616d4814129d
  main106 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
faa4ac5a269bcfad3df764e6a0ba9dcd
  main107 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -2#) -}
bed2b3407e46019258bbdc858bef2786
  main108 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
9b312270f40dc8dff9704a23b30821c3
  main109 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
158ebad4c1895c5b58f81e4eb1242973
  main11 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main12) -}
3c6318e642a83d2b95ad41718b36995d
  main110 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -1#) -}
245fda9a2dd47b9fc705b89faa97edea
  main111 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
8ce6f211bc1578bf10ea53967a894cce
  main112 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 9#) -}
5e2e044f0b5f918492120f6a228bb8c5
  main113 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
39faba18b6e865e0d5f1226dc3c8bd0a
  main114 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 10#) -}
4216146a699e016390e17ad21a6997e9
  main115 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
eac148f67fe94af7da89915be5fda176
  main116 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
2f24e9781dcecaab7d329ff1706fae76
  main117 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 12#) -}
43ca67fddadfc9424b6d86768bdf202d
  main118 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 13#) -}
6dc9ef6d5b09b7a345f54e670f8527fa
  main119 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
3ca3f7226ba37503a91a5189b4f5a7ef
  main12 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main13) -}
79db9e7e94709469bf733069d54d8135
  main120 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 14#) -}
d4f046ce4b127e80a328a130be81477e
  main121 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 15#) -}
b1732f6e940b158f25d7be77b114e5db
  main122 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 16#) -}
505599680401941b273abe1eb8065077
  main123 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
37605134eb67585b618826ab8533634b
  main124 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 18#) -}
6123ec9b9e707851daf979127abf914a
  main125 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main126) -}
c281f6f7d9dc09b53d9bdd44d594b682
  main126 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("modifier"#) -}
d55a996eaef0c3bdd44993bdf13667c4
  main127 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main128
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
0d1e14085830f90d34ab5d6a7f56c6c2
  main128 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main36
                   Main.main129
                   GHC.Stack.Types.EmptyCallStack) -}
d0281e5236610661d83cb651e96fb575
  main129 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main22
                   Main.main21
                   Main.main19
                   Main.main34
                   Main.main35
                   Main.main34
                   Main.main130) -}
03472334a9ad05a2e35df7c66fa3fc9e
  main13 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main14) -}
21e00d6bbc87994aca08dcf33291a806
  main130 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 22#) -}
6597a918de46115bb64caca4cd951ea8
  main131 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
91ad1ba3a1c587accbb4af89ae0d57db
  main132 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
6730ff844246b5168301f1b667337088
  main14 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main23
                   Main.main15
                   GHC.Stack.Types.EmptyCallStack) -}
cb27512bc164e37009b26f33e56ec4fe
  main15 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main22
                   Main.main21
                   Main.main19
                   Main.main18
                   Main.main17
                   Main.main18
                   Main.main16) -}
da11e050bf21f95295122a3806055b7f
  main16 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 57#) -}
160d7310efb6e1dce2c28ddd749fb0b8
  main17 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 26#) -}
562014394d0d9b0a5d214d2f103409c3
  main18 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 28#) -}
b4350ea76b393108d8ab5f0d7c12b64b
  main19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main20) -}
8ed2a9e0c9af6d6a5e4e275a5b22c0b7
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Main.main127
                         Main.main125
                         Main.main63
                           `cast`
                         (Sym (GHC.Types.N:IO[0]
                                   <((),
                                     [Test.Hspec.Core.Tree.SpecTree
                                        ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                             <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                             <GHC.Types.IO>_R
                                                             <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                                <()>_N) <()>_N)))
                        `cast`
                      (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                           <()>_N <()>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                <GHC.Types.IO>_R
                                                <()>_N ; GHC.Types.N:IO[0]
                                                             <((),
                                                               [Test.Hspec.Core.Tree.SpecTree
                                                                  ()])>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Main.main59
                         Main.main57
                         Main.main38
                           `cast`
                         (Sym (GHC.Types.N:IO[0]
                                   <((),
                                     [Test.Hspec.Core.Tree.SpecTree
                                        (Test.Hspec.Core.Example.Arg
                                           Test.QuickCheck.Property.Property)])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                                                    (Test.Hspec.Core.Example.Arg
                                                                                                       Test.QuickCheck.Property.Property)]>_N
                                                                                                <GHC.Types.IO>_R
                                                                                                <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                                                                   (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0]))) <()>_N)))
                        `cast`
                      (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                           <()>_N <()>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                <GHC.Types.IO>_R
                                                <()>_N ; GHC.Types.N:IO[0]
                                                             <((),
                                                               [Test.Hspec.Core.Tree.SpecTree
                                                                  ()])>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case (Main.main31
                         Main.main29
                         Main.main3
                           `cast`
                         (Sym (GHC.Types.N:IO[0]
                                   <((),
                                     [Test.Hspec.Core.Tree.SpecTree
                                        (Test.Hspec.Core.Example.Arg
                                           Test.QuickCheck.Property.Property)])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                                                                <[Test.Hspec.Core.Tree.SpecTree
                                                                                                    (Test.Hspec.Core.Example.Arg
                                                                                                       Test.QuickCheck.Property.Property)]>_N
                                                                                                <GHC.Types.IO>_R
                                                                                                <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                                                                   (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0]))) <()>_N)))
                        `cast`
                      (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                           <()>_N <()>_N ; (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                <GHC.Types.IO>_R
                                                <()>_N ; GHC.Types.N:IO[0]
                                                             <((),
                                                               [Test.Hspec.Core.Tree.SpecTree
                                                                  ()])>_R))
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    (case ipv5 of wild { (,) b1 w' -> b1 },
                     case ipv1 of wild { (,) a1 w2 ->
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       w2
                       (case ipv3 of wild1 { (,) a2 w1 ->
                        GHC.Base.++
                          @ (Test.Hspec.Core.Tree.Tree
                               (Test.Hspec.Core.Example.ActionWith ())
                               (Test.Hspec.Core.Tree.Item ()))
                          w1
                          (case ipv5 of wild2 { (,) b1 w' -> w' }) }) }) #) } } }) -}
53a7a3d700a7d9f7fc63c3aa535403bc
  main20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test\\Tests.hs"#) -}
cf4c7a7b65f95818bcb7e4330c038a66
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
c037918051f2b0185bfc2edb95916f7e
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
93e39321392b932534ce2736891c536a
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main24) -}
4f98395ec79d58937eb2fc125301afbe
  main24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
82ed20671f8be53a27a023a9929d9367
  main25 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main28
                   Main.main26) -}
c336491f9e621bce072e13a91682240d
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main27) -}
c5c295c2a2a4f876cceb6f4cca5fa0c3
  main27 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("enerates valid characters"#) -}
3619e322fab7adac27886b98264f8796
  main28 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'g'#) -}
3b5bf0e04f6f328ee2c46d95ca56322d
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main30) -}
248e4dd64d36942ef2cab940aed06997
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.SpecTree
              (Test.Hspec.Core.Example.Arg
                 Test.QuickCheck.Property.Property)]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta2, Main.main4 #)) -}
02fccbf8f9b938cb3583ce9dd51cdfbc
  main30 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("character"#) -}
34b172513469b9c3a31e31a84de793bd
  main31 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main32
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
9df585dbb0490acec15cdc7e043545ed
  main32 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main36
                   Main.main33
                   GHC.Stack.Types.EmptyCallStack) -}
5d4be0ee9783d054483e9631940ff4e7
  main33 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main22
                   Main.main21
                   Main.main19
                   Main.main18
                   Main.main35
                   Main.main18
                   Main.main34) -}
ad6d61fefb0f99a86df79e635a8649e8
  main34 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 23#) -}
0d8725b9124c4c80514b256ac94ae273
  main35 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
f77333174561f0eabcbfc181f5902e98
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main37) -}
0e419669fc85ba6607f18628467775ea
  main37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("describe"#) -}
a356d098432db490d091aca015ff276d
  main38 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.SpecTree
              (Test.Hspec.Core.Example.Arg
                 Test.QuickCheck.Property.Property)]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# eta2, Main.main39 #)) -}
dffb5095add69c5223df83a23eddda39
  main39 ::
    ((),
     [Test.Hspec.Core.Tree.SpecTree
        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), Main.main40)) -}
311ee3cda283ec3943cdbd8d38bad273
  main4 ::
    ((),
     [Test.Hspec.Core.Tree.SpecTree
        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)])
  {- Strictness: m, Unfolding: ((GHC.Tuple.(), Main.main5)) -}
e5acc0df260f299356dc01b83c31b3f2
  main40 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main41
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
92a23d945a8a7edaf01e940cb74a1921
  main41 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main42) -}
2e2feb5b400795f304e876a824e96822
  main42 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   Main.main54
                   Main.main45
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main43
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
a7c900661765e1989af7e33c973d8a7b
  main43 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   ((<Test.QuickCheck.Property.Property>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R (((Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0]
                                      <()>_N) ; Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                            ->_R <GHC.Types.IO ()>_R)
                           ->_R <GHC.Types.IO ()>_R)
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.QuickCheck.Property.Property>_N))
                   Main.main44
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <Test.QuickCheck.Property.Prop>_R) ; Sym (Test.QuickCheck.Property.N:Property[0]))) -}
750bab46e2e437604a98d18149bb3574
  main44 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> Test.QuickCheck.Property.Prop
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>m2,
     Unfolding: (\ (w1 :: Test.QuickCheck.Random.QCGen)
                   (w2 :: GHC.Types.Int) ->
                 case w1
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case System.Random.TF.Gen.$wtfGenSplit
                        ww1
                        ww2
                        ww3
                        ww4 of ww7 { (#,#) ww8 ww9 ->
                 (Test.QuickCheck.Property.IORose
                    @ Test.QuickCheck.Property.Result
                    (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case Test.QuickCheck.Exception.tryEvaluate2
                            @ (Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result)
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             (# s1,
                                case ww8 of ww11 { System.Random.TF.Gen.TFGen ww12 ww13 ww14 ww15 ww16 ww17 ->
                                Test.QuickCheck.Property.$wforAllShrink
                                  @ GHC.Types.Int
                                  @ GHC.Types.Bool
                                  GHC.Show.$fShowInt
                                  Test.QuickCheck.Property.$fTestableBool_$cproperty
                                    `cast`
                                  (Sym (Test.QuickCheck.Property.N:Testable[0] <GHC.Types.Bool>_N))
                                  DND.ability1
                                    `cast`
                                  (Sym (Test.QuickCheck.Gen.N:Gen[0] <GHC.Types.Int>_R))
                                  (Test.QuickCheck.Property.forAll2 @ GHC.Types.Int)
                                  Main.main_abilityWithinRange
                                  ww12
                                  ww13
                                  ww14
                                  ww15
                                  w2 } #))
                              `cast`
                            (Sym (GHC.Types.N:IO[0]
                                      <Test.QuickCheck.Property.Rose
                                         Test.QuickCheck.Property.Result>_R))
                            s of ds { (#,#) ipv ipv1 ->
                     (# ipv,
                        case ipv1 of wild {
                          Data.Either.Left x
                          -> Test.QuickCheck.Property.MkRose
                               @ Test.QuickCheck.Property.Result
                               (Test.QuickCheck.Property.$fTestable()_f x)
                               (GHC.Types.[]
                                  @ (Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result))
                          Data.Either.Right y -> y } #) })
                      `cast`
                    (Sym (GHC.Types.N:IO[0]
                              <Test.QuickCheck.Property.Rose
                                 Test.QuickCheck.Property.Result>_R)))
                   `cast`
                 (Sym (Test.QuickCheck.Property.N:Prop[0])) } }) -}
774cf2c303b307b31edd0eb48665bf4c
  main45 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main46) -}
fc337f289f5e9c6d5b59ed9483d5473f
  main46 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main47) -}
5b8eff6ab5c3a926b9ab61787eeee4b2
  main47 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main48) -}
ab72a1e0417f5e58315fee3eac62106b
  main48 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main49) -}
ffa408c723d4961fcc178657945c13ae
  main49 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main23
                   Main.main50
                   GHC.Stack.Types.EmptyCallStack) -}
f4b658c7b8510d2ad78987da455104d9
  main5 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main6
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
efafe99b7a06719cb8de76d134c0c603
  main50 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main22
                   Main.main21
                   Main.main19
                   Main.main53
                   Main.main52
                   Main.main53
                   Main.main51) -}
85a16f1c08b1bcdacdd5345352680c74
  main51 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 58#) -}
f417c6a3c3b42798f4a30a0caf6531a4
  main52 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 24#) -}
92bb7e667d57faa4abbf69446ab5737e
  main53 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 25#) -}
61975bda2c76949f2cfe2c31d0e925ae
  main54 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.main28
                   Main.main55) -}
e70a6f6211329049cfe302c4973b0eac
  main55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main56) -}
c50470133bfa546cce2ab87f60f0ddda
  main56 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("enerates values within range"#) -}
581c236b6f291a45efd149cee8b4c3c2
  main57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main58) -}
73268d2bea36ace8a6b57d529cabbba4
  main58 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ability"#) -}
736939ebd388dc7c5e00c125c60ddb9e
  main59 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main60
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
bd3c454ec9b0a9e06f776eb567be9675
  main6 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
  {- Strictness: m3,
     Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Main.main7) -}
f6e84984f02c3396e60131f8797375c6
  main60 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main36
                   Main.main61
                   GHC.Stack.Types.EmptyCallStack) -}
161773ea2c1d30c07a9de619537c657d
  main61 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main22
                   Main.main21
                   Main.main19
                   Main.main53
                   Main.main35
                   Main.main53
                   Main.main62) -}
33bfb3b261c57155f8f6bef12f00f250
  main62 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
531070cd2498e0fbf02019d3c4f8b546
  main63 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$wc
                   Main.main124
                   Main.main105
                   Main.main64
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
05126bc29b8f93f58d1e570be001a972
  main64 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main123
                   Main.main35
                   Main.main65
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
fcfc9448fc62d7cb9406eb6fb901987f
  main65 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main122
                   Main.main35
                   Main.main66
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
73a32ab07b7c446fa065a95a1ce5ac67
  main66 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main121
                   Main.main119
                   Main.main67
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
24db396e84d14060385bf10f21359c98
  main67 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main120
                   Main.main119
                   Main.main68
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
13ff396c7b3ea16877a7b1044624b784
  main68 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main118
                   Main.main116
                   Main.main69
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
329f512e56081cc22f8c8a630729916a
  main69 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main117
                   Main.main116
                   Main.main70
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
59071c6280ce8d0c3189c1f68d9d4f63
  main7 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Strictness: m,
     Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                   Main.main25
                   Main.main10
                   (GHC.Base.Nothing @ GHC.Types.Bool)
                   Main.main8
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Test.Hspec.Core.Example.Result>_R))) -}
c847ccb2ecc7ecf317057b92e6ac1954
  main70 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main115
                   Main.main113
                   Main.main71
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
d3c66cc54592aad211f1b9c5e543953b
  main71 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main114
                   Main.main113
                   Main.main72
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
406fbca2b8b3f17d7aa5f4207f764556
  main72 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main112
                   Main.main110
                   Main.main73
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
d424e76b4e18dee0fa7ae99fbaeb3314
  main73 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main111
                   Main.main110
                   Main.main74
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
e96750811df842723a8c030eaa3f9e51
  main74 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main109
                   Main.main107
                   Main.main75
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
2f43b07464d510b9c2fca453e785eb8a
  main75 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main108
                   Main.main107
                   Main.main76
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
29b34c76412e07746243137f81e7f7a2
  main76 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main106
                   Main.main104
                   Main.main77
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
90b7503542fd8923c11d14286f10eba0
  main77 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main105
                   Main.main104
                   Main.main78
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
4f9aee6cb14c762a805fc7362083b429
  main78 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main35
                   Main.main81
                   Main.main79
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
a3e03dd22c137c8c4809bfea9c307f7c
  main79 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main80 #)) -}
871b0f2bdb071f22b1f88e5d608ca4dd
  main8 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.QuickCheck.Property.Property
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   ((<Test.QuickCheck.Property.Property>_R
                     ->_R <Test.Hspec.Core.Example.Params>_R
                     ->_R (((Sub (Test.Hspec.Core.Example.D:R:Arg(->)[0]
                                      <()>_N) ; Sub (Sym (Test.Hspec.Core.Example.D:R:ArgProperty[0])))
                            ->_R <GHC.Types.IO ()>_R)
                           ->_R <GHC.Types.IO ()>_R)
                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                   <Test.QuickCheck.Property.Property>_N))
                   Main.main9
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <Test.QuickCheck.Property.Prop>_R) ; Sym (Test.QuickCheck.Property.N:Property[0]))) -}
250b833763bf02f00f180163fd75589d
  main80 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
edf1c7bf604a77c7127d141f114cf25e
  main81 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -4#) -}
d594ffd8196f466e9f8e778bc50f23c5
  main82 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?6
                   Test.HUnit.Base.@?=2
                   Main.main83) -}
5e2f02dc2e5223ba30375549768c3a62
  main83 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe6
                   Test.Hspec.Expectations.shouldBe2
                   Main.main84) -}
2a344b121553bea6c5f705f90ee2b7d3
  main84 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main88
                   Main.main85
                   GHC.Stack.Types.EmptyCallStack) -}
73705977cdc66285db9a72457d740d3d
  main85 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main22
                   Main.main21
                   Main.main19
                   Main.main87
                   Main.main62
                   Main.main87
                   Main.main86) -}
aa44becd3fadca22099c21bf8a7e9a33
  main86 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 55#) -}
9a2deda2a7d685e550368e32397af05e
  main87 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 34#) -}
23ab16547acfa52e87585723b2309436
  main88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main89) -}
8bc516287da984bfb7dfe24c4589e965
  main89 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shouldBe"#) -}
954b8a9f998cbe8417153cf559821904
  main9 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> Test.QuickCheck.Property.Prop
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U>m2,
     Unfolding: (\ (w1 :: Test.QuickCheck.Random.QCGen)
                   (w2 :: GHC.Types.Int) ->
                 case w1
                        `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case System.Random.TF.Gen.$wtfGenSplit
                        ww1
                        ww2
                        ww3
                        ww4 of ww7 { (#,#) ww8 ww9 ->
                 (Test.QuickCheck.Property.IORose
                    @ Test.QuickCheck.Property.Result
                    (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                     case Test.QuickCheck.Exception.tryEvaluate2
                            @ (Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result)
                            (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             (# s1,
                                case ww8 of ww11 { System.Random.TF.Gen.TFGen ww12 ww13 ww14 ww15 ww16 ww17 ->
                                Test.QuickCheck.Property.$wforAllShrink
                                  @ DND.Character
                                  @ Test.QuickCheck.Property.Property
                                  DND.$fShowCharacter
                                  Test.QuickCheck.Property.$fTestableProperty1
                                    `cast`
                                  ((<Test.QuickCheck.Property.Property>_R
                                    ->_R Sym (Test.QuickCheck.Gen.N:Gen[0]
                                                  <Test.QuickCheck.Property.Prop>_R) ; Sym (Test.QuickCheck.Property.N:Property[0])) ; Sym (Test.QuickCheck.Property.N:Testable[0]
                                                                                                                                                <Test.QuickCheck.Property.Property>_N))
                                  DND.character1
                                    `cast`
                                  (Sym (Test.QuickCheck.Gen.N:Gen[0] <DND.Character>_R))
                                  (Test.QuickCheck.Property.forAll2 @ DND.Character)
                                  Main.main_pf
                                  ww12
                                  ww13
                                  ww14
                                  ww15
                                  w2 } #))
                              `cast`
                            (Sym (GHC.Types.N:IO[0]
                                      <Test.QuickCheck.Property.Rose
                                         Test.QuickCheck.Property.Result>_R))
                            s of ds { (#,#) ipv ipv1 ->
                     (# ipv,
                        case ipv1 of wild {
                          Data.Either.Left x
                          -> Test.QuickCheck.Property.MkRose
                               @ Test.QuickCheck.Property.Result
                               (Test.QuickCheck.Property.$fTestable()_f x)
                               (GHC.Types.[]
                                  @ (Test.QuickCheck.Property.Rose Test.QuickCheck.Property.Result))
                          Data.Either.Right y -> y } #) })
                      `cast`
                    (Sym (GHC.Types.N:IO[0]
                              <Test.QuickCheck.Property.Rose
                                 Test.QuickCheck.Property.Result>_R)))
                   `cast`
                 (Sym (Test.QuickCheck.Property.N:Prop[0])) } }) -}
f8d5a0a016a884284b96054af2817e81
  main90 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main91) -}
93913734f7068c7270cbda1e558d70b2
  main91 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main92) -}
62e6c84c534ab6b2fa2a323070d59346
  main92 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main93) -}
bfcb7c0813308517367aac6d8acd6937
  main93 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main94) -}
98c805cb6c1a34f6d37a70992346d03c
  main94 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main23
                   Main.main95
                   GHC.Stack.Types.EmptyCallStack) -}
74386ffff5e1208256108ab4ef5fd7a8
  main95 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main22
                   Main.main21
                   Main.main19
                   Main.main97
                   Main.main62
                   Main.main97
                   Main.main96) -}
a7b45114b7ce905477368eb0e763f0f5
  main96 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
3005b67475acfe3e2110b7c1fbc2581e
  main97 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 31#) -}
f38ffcce9f40783674342b00a4c45931
  main98 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (Test.Hspec.Core.Tree.specGroup19 Main.main99) -}
491def04930b09f47b1dc344c9f1e779
  main99 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.specGroup15
                   Main.main100) -}
cfab3e86c9789347b5e43b06184194a8
  main_abilityWithinRange :: GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ability' :: GHC.Types.Int) ->
                 case ability' of wild { GHC.Types.I# x ->
                 case GHC.Prim.>=# x 3# of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# x 18#) } }) -}
5966bde88fcecd126e2c9a72204a2fff
  main_pf :: DND.Character -> Test.QuickCheck.Property.Property
  {- Arity: 1,
     Strictness: <L,U(A,1*U(U),1*U(U),U(U),1*U(U),1*U(U),1*U(U),U(U))> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

