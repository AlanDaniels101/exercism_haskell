
==================== FINAL INTERFACE ====================
2019-10-24 20:01:43.4899544 UTC

interface main:Paths_luhn 8065
  interface hash: 05751bf4d1e08f9006da97401140b773
  ABI hash: c68697761e03baad4aa489445ec066b8
  export-list hash: 08038a1801824ed8782b5d2840257066
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 8ace2393cc8b2e42d2b23b0b02df069b
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_luhn.getBinDir
  Paths_luhn.getDataDir
  Paths_luhn.getDataFileName
  Paths_luhn.getDynLibDir
  Paths_luhn.getLibDir
  Paths_luhn.getLibexecDir
  Paths_luhn.getSysconfDir
  Paths_luhn.version
module dependencies:
package dependencies: base-4.12.0.0* ghc-prim-0.5.3
                      integer-gmp-1.0.2.0
orphans: base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity base-4.12.0.0:Data.Monoid
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
import  -/  base-4.12.0.0:Control.Exception 68d632685955b01899aa782b05b79cdf
import  -/  base-4.12.0.0:Data.Version 3fc9a28dff258573273513c608375452
import  -/  base-4.12.0.0:GHC.Base fbe365a916ebeeeb4bc1f895dbe83e42
import  -/  base-4.12.0.0:GHC.IO caa7ca94733978776c4f954a05ccc347
import  -/  base-4.12.0.0:GHC.IO.Exception 99271e07ec0e09b76d45c79794dad266
import  -/  base-4.12.0.0:Prelude 80c668cb99fbafebd524c5e897f8c982
import  -/  base-4.12.0.0:System.Environment 045df705c1f205b31d24a0f6340ea2db
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
addDependentFile "C:\Users\aland\AppData\Local\Programs\stack\x86_64-windows\ghc-8.6.5\lib\include\ghcversion.h" 43db44f9bb88490c2fa995e5f5ec33f2
addDependentFile ".stack-work\dist\e626a42b\build\test\autogen\cabal_macros.h" 3dcd4ba255ff0f64f0ba54c491fa8a5c
ada844b6d56c8b57dbadbefc2a68a2c6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_luhn.$trModule3
                   Paths_luhn.$trModule1) -}
7e4a9be6391e3ef5505fa129df661d3f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_luhn.$trModule2) -}
305b9f8ef39491778b0e105e92ff7f89
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Paths_luhn"#) -}
bb28cddc56c0a85bf8e902131a119c3a
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_luhn.$trModule4) -}
9ecbed63f59cfcc8acdd2a40b36d40f0
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
ab3b0a75e6548a1274c38ba05a3a6954
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_luhn.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
94305bb98e69f7e84c4f792289548fbf
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_luhn.getBinDir5
                   Paths_luhn.getBinDir2
                   eta) -}
f42d13e31f6e34a5bda8f8c9200104d3
  getBinDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_luhn.getBinDir3 #) } }) -}
81e24534cabbfd9a4fe52779eb5abb2c
  getBinDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Paths_luhn.getBinDir4) -}
63934ee41067ba340968f10f7740693b
  getBinDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\aland\\Exercism\\haskell\\luhn\\.stack-work\\install\\072e9945\\bin"#) -}
dd0a187bb239b1002bde405e9069c663
  getBinDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_luhn.getBinDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203## -> System.Environment.getEnv2 Paths_luhn.getBinDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
560001aad9e399dea25eef066c208c7d
  getBinDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Paths_luhn.getBinDir7) -}
8e153a849f95c76e6216e1e2308d1dae
  getBinDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("luhn_bindir"#) -}
9a9c6fe6533f0a21c10d1c49fc660c13
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_luhn.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
f43b48a5fdbab68c00befa1e4a14418e
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_luhn.getDataDir5
                   Paths_luhn.getDataDir2
                   eta) -}
a42eb278ad9ca9065ba04aaeb0c8a57c
  getDataDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_luhn.getDataDir3 #) } }) -}
2b1dcb1f0ad766867765a4efc784107a
  getDataDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_luhn.getDataDir4) -}
a372750fec9e5e5d3897c758839a7968
  getDataDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\aland\\Exercism\\haskell\\luhn\\.stack-work\\install\\072e9945\\share\\x86_64-windows-ghc-8.6.5\\luhn-1.3.0.6"#) -}
139b1e2f29db1b74e8088477a2ecefc8
  getDataDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_luhn.getDataDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203## -> System.Environment.getEnv2 Paths_luhn.getDataDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
d3eea92ea8c506c5033db114c591de52
  getDataDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_luhn.getDataDir7) -}
2ba22dd902d05e68d74c4c021502797a
  getDataDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("luhn_datadir"#) -}
88a358724f98013aed60fb5a84eca7d0
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_luhn.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
9bf0d8914dee6cf85c612e08d43e2bda
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.Type.SomeException
                        Paths_luhn.getDataDir5
                        Paths_luhn.getDataDir2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString#
                         Paths_luhn.getDataFileName2
                         name) #) }) -}
110323b316d5e24d4b38645f064f54ca
  getDataFileName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\\"#) -}
1e3e8b3d3608c4d336ac075943d17012
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_luhn.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
dd2e7cd84214bac4378ed7c32644e9fc
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_luhn.getDynLibDir5
                   Paths_luhn.getDynLibDir2
                   eta) -}
ebff215ec4a471b93f9772b94cd41005
  getDynLibDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_luhn.getDynLibDir3 #) } }) -}
4db8b6bab1dca6106b2640fdb0126dda
  getDynLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_luhn.getDynLibDir4) -}
c53a063b0690844a295063229c9f790d
  getDynLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\aland\\Exercism\\haskell\\luhn\\.stack-work\\install\\072e9945\\lib\\x86_64-windows-ghc-8.6.5"#) -}
bd75deeadce4d0c0bdbc6f48acb8f3ea
  getDynLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_luhn.getDynLibDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203## -> System.Environment.getEnv2 Paths_luhn.getDynLibDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
9954ebe50241659d7537afe572158da7
  getDynLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_luhn.getDynLibDir7) -}
fb2906c4f6b8b998f9537c6bcc344066
  getDynLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("luhn_dynlibdir"#) -}
798c0758edeb43a3c544b4bdceb342a5
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_luhn.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
ec16a073d60f0856ccd272038ef9590b
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_luhn.getLibDir5
                   Paths_luhn.getLibDir2
                   eta) -}
01a8d0a33d20ff9b58fdb84e5bee6179
  getLibDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_luhn.getLibDir3 #) } }) -}
d33795e785d542144546e2b192ccda88
  getLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Paths_luhn.getLibDir4) -}
6d140832a3f993c50e526eceae560022
  getLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\aland\\Exercism\\haskell\\luhn\\.stack-work\\install\\072e9945\\lib\\x86_64-windows-ghc-8.6.5\\luhn-1.3.0.6-Lq3ZRV6sPyY9amDCGxIPFi-test"#) -}
8fc41e5386b53bc4b58f776088c2e258
  getLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_luhn.getLibDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203## -> System.Environment.getEnv2 Paths_luhn.getLibDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
e952dff8bb2e716d87ad0fb950547d0b
  getLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Paths_luhn.getLibDir7) -}
2b4d4ab7c80d54a62ef130bb87ec4557
  getLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("luhn_libdir"#) -}
2512a918aa33c5988bb62d6588a04e10
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_luhn.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
08d7a4b6696396a50b443660de603b39
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_luhn.getLibexecDir5
                   Paths_luhn.getLibexecDir2
                   eta) -}
694ec740f0a747189b78524b838d6e7e
  getLibexecDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_luhn.getLibexecDir3 #) } }) -}
eddd0dc9262f0f7c3108958bf058fe6a
  getLibexecDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_luhn.getLibexecDir4) -}
ab1bdec8368f739d475b435eb43bc34a
  getLibexecDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\aland\\Exercism\\haskell\\luhn\\.stack-work\\install\\072e9945\\libexec\\x86_64-windows-ghc-8.6.5\\luhn-1.3.0.6"#) -}
303a04cc7d5ad98edb13a3205a7ea0f5
  getLibexecDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_luhn.getLibexecDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203##
                        -> System.Environment.getEnv2 Paths_luhn.getLibexecDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
f33cb7f1d873b727aff566c1fca25697
  getLibexecDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_luhn.getLibexecDir7) -}
b5159ed9405c6f6b2c7969a9a4d22c71
  getLibexecDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("luhn_libexecdir"#) -}
672701f76a57d988ffcf77e833b8b162
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_luhn.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
afbaf00a7ae09b01b27834234b11b2aa
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_luhn.getSysconfDir5
                   Paths_luhn.getSysconfDir2
                   eta) -}
2d301f50af907445b347f262fe063383
  getSysconfDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_luhn.getSysconfDir3 #) } }) -}
ccf670b2464c3a5d554d14763d0f229e
  getSysconfDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_luhn.getSysconfDir4) -}
5a64eb7c3258a36fa06485aa5c86f357
  getSysconfDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\aland\\Exercism\\haskell\\luhn\\.stack-work\\install\\072e9945\\etc"#) -}
76f28ed357653871df0f7ed79baf5078
  getSysconfDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_luhn.getSysconfDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203##
                        -> System.Environment.getEnv2 Paths_luhn.getSysconfDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
87ceaa8b50de1b09f8f02fb923a59567
  getSysconfDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_luhn.getSysconfDir7) -}
e85a1dc3636df0c313efee5f1fb72e3c
  getSysconfDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("luhn_sysconfdir"#) -}
6be886834b0141a04d690e4b407db6d0
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_luhn.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
cef6ad8395fed472e1f334ae66cc113d
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_luhn.version8
                   Paths_luhn.version2) -}
1d65768f7bba389fef2d1d03a5512720
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_luhn.version7
                   Paths_luhn.version3) -}
8ef7d43d1a2a95307e398260a447be1b
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_luhn.version6
                   Paths_luhn.version4) -}
542031b1f589b471d124d4d796bc3ab8
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_luhn.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
704ae21171e0ef3fec761bddb7137017
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
22d4993ea14a649a0a0370a73f43edfb
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
aec8c2bc965ee708cd5c946766d5a18e
  version7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
2575f11a32e84a966651bb5518bc813d
  version8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
trusted: safe
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

