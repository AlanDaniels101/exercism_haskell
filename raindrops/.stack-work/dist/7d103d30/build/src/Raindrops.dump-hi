
==================== FINAL INTERFACE ====================
2019-04-13 20:56:57.33739 UTC

interface raindrops-1.1.0.5-Cje75kXUIoz6CKgbJphQ8N:Raindrops 8043
  interface hash: 62169cd274a336a18d2f6f17aa72f18c
  ABI hash: c144d1e259566f52ab0a2d90d9546a44
  export-list hash: ba1124cf1455a55434aa5d7fbe8e74a7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0527c515cada2cc2079fef10aa370e66
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Raindrops.convert
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Data.Foldable 6cf3e918f22d03c0870804f05cd183d1
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.Real 032ed0a1053f878238d78e95e75f2edf
import  -/  base-4.11.1.0:GHC.Show 6211aec7cccd267a5ee999e4414d7b90
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  ghc-prim-0.5.2.0:GHC.Classes f7d67fd97d5a20e9252c9597d1aa387b
f7a158bbc73f570ed2f0faeb7c0b777d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Raindrops.$trModule3
                   Raindrops.$trModule1) -}
33be91ef9c84035ae1438bb2aa0fe24c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Raindrops.$trModule2) -}
e02166a6fede8360ae85c8b67fa07fb7
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Raindrops"#) -}
ec86e36031c47b89d39b4313216eec52
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Raindrops.$trModule4) -}
c8ad52d580b6c10738c66b51e4a4efcc
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("raindrops-1.1.0.5-Cje75kXUIoz6CKgbJphQ8N"#) -}
a71056dd62ee1a5cf6ddfd2995111caf
  $wconvert :: GHC.Prim.Int# -> GHC.Base.String
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 let {
                   n :: [GHC.Types.Char]
                   = case GHC.Prim.remInt# ww 5# of wild {
                       DEFAULT
                       -> case GHC.Prim.remInt# ww 7# of wild1 {
                            DEFAULT -> GHC.Types.[] @ GHC.Types.Char 0# -> Raindrops.convert5 }
                       0#
                       -> GHC.Base.++
                            @ GHC.Types.Char
                            Raindrops.convert3
                            (case GHC.Prim.remInt# ww 7# of wild1 {
                               DEFAULT -> GHC.Types.[] @ GHC.Types.Char
                               0# -> Raindrops.convert5 }) }
                 } in
                 case GHC.Prim.remInt# ww 3# of wild {
                   DEFAULT
                   -> case n of wild1 {
                        []
                        -> case GHC.Show.$wshowSignedInt
                                  0#
                                  ww
                                  (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 }
                        : ds1 ds2 -> wild1 }
                   0#
                   -> case GHC.Base.++
                             @ GHC.Types.Char
                             Raindrops.convert1
                             n of wild1 {
                        []
                        -> case GHC.Show.$wshowSignedInt
                                  0#
                                  ww
                                  (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                           GHC.Types.: @ GHC.Types.Char ww5 ww6 }
                        : ds1 ds2 -> wild1 } }) -}
7a40530dd07c6abc0afb710581972d67
  convert :: GHC.Types.Int -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> Raindrops.$wconvert ww1 }) -}
cd29f03c82a323e3f25d478a9795f858
  convert1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Raindrops.convert2) -}
ee403c064066b231914e98523b57ad0a
  convert2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Pling"#) -}
5999e0158cc1474cff0e4a737c7629d5
  convert3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Raindrops.convert4) -}
7a9a0b992322d4e9f77945e426df33a5
  convert4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Plang"#) -}
861ddc0885177307af33720914b8d1f1
  convert5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Raindrops.convert6) -}
8c2afa3b1a2eaefd860c410300c3a997
  convert6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Plong"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

